{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "userNames",
      "outputs": [
        {
          "internalType": "contract UserContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "contract UserContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "contract UserContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [
        {
          "internalType": "contract UserContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract MusicContract",
          "name": "_musicContract",
          "type": "address"
        }
      ],
      "name": "addMusicToLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLibrary",
      "outputs": [
        {
          "internalType": "contract MusicContract[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract MusicContract\",\"name\":\"_musicContract\",\"type\":\"address\"}],\"name\":\"addMusicToLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[{\"internalType\":\"contract UserContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLibrary\",\"outputs\":[{\"internalType\":\"contract MusicContract[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"contract UserContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"userNames\",\"outputs\":[{\"internalType\":\"contract UserContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"contract UserContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Samarth Bhadane\",\"methods\":{\"addMusicToLibrary(address)\":{\"params\":{\"_musicContract\":\"is instance of MusicContract which is to be added.\"}},\"addUser(string)\":{\"details\":\"This function will add a new user. The transaction will be revoked if a Smart Contract invokes this function.     After successful execution, the value of users[msg.sender] is set to true which shows successful registration     of user. If an user who has already registered invokes this function, the transaction will be revoked.\",\"params\":{\"_name\":\"is string. This name is assigned to UserContract.\"},\"returns\":{\"_0\":\"Returns address of deployed UserContract.\"}},\"isRegistered(address)\":{\"details\":\"This function will return true if an address has registered using addUser(), else return false.\",\"params\":{\"_address\":\"is for which check is to be done.\"},\"returns\":{\"_0\":\"boolean value (true or false).\"}}},\"title\":\"Factory Contract\"},\"userdoc\":{\"methods\":{\"addMusicToLibrary(address)\":{\"notice\":\"This function adds address to musicLibrary[] on addition of new music by user.\"},\"addUser(string)\":{\"notice\":\"This function is used to Register new user.\"},\"isRegistered(address)\":{\"notice\":\"Check if an address provided has Registered. If yes, return true, else false.\"}},\"notice\":\"This contract is used as a factory for user contract and for storing address of all music contracts deployed.\"}},\"settings\":{\"compilationTarget\":{\"/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol\":{\"keccak256\":\"0x312147056205e67779bdcd0d097ff006b2930dd860f4e634d4434e79764e19a5\",\"urls\":[\"bzz-raw://2a8e12a50ddef73cafbbe4ea6c15cc88ccce29c0eec484747abbd12884accedc\",\"dweb:/ipfs/QmQVYzms3DBGzHQpCqiXATD1bNjYfACvsYick6G5bfR1Fc\"]},\"/home/samarth/Blockchain/Dapps/music-stream/contracts/MusicContract.sol\":{\"keccak256\":\"0xb4b7169bb5dcbc48b2ae54c7f4feca560074d3fd7a16747bcfa31baa3d52bb35\",\"urls\":[\"bzz-raw://2c65a2441a02a7ef8bb2d546c45505950af32bcdb2db8a9ba221479ef59253b7\",\"dweb:/ipfs/QmQRSk81GMVxg4XxY1od4JmJZN2KW6SqJHcS8AXtXWzpUf\"]},\"/home/samarth/Blockchain/Dapps/music-stream/contracts/UserContract.sol\":{\"keccak256\":\"0xa0d32f2f3168a2259ef9c741977ca9e1d0970e946a40709780a3c8a7d6c3326c\",\"urls\":[\"bzz-raw://3f9ef64f011a6c7ebac1351d9d7ab0fa38f4ad43418b2e4c720ada8cddf55d6c\",\"dweb:/ipfs/QmUiypkJaRq9w58MkutBnt4yfYMbUxthasQZtHCLAsnEnM\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612567806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806318b8275a146100675780635471e23714610129578063677cd575146101515780637678922e146101f7578063a87430ba1461024f578063c3c5a54714610275575b600080fd5b61010d6004803603602081101561007d57600080fd5b81019060208101813564010000000081111561009857600080fd5b8201836020820111156100aa57600080fd5b803590602001918460018302840111640100000000831117156100cc57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102be945050505050565b604080516001600160a01b039092168252519081900360200190f35b61014f6004803603602081101561013f57600080fd5b50356001600160a01b031661058a565b005b61010d6004803603602081101561016757600080fd5b81019060208101813564010000000081111561018257600080fd5b82018360208201111561019457600080fd5b803590602001918460018302840111640100000000831117156101b657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105dc945050505050565b6101ff610602565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561023b578181015183820152602001610223565b505050509050019250505060405180910390f35b61010d6004803603602081101561026557600080fd5b50356001600160a01b0316610664565b61029b6004803603602081101561028b57600080fd5b50356001600160a01b031661067f565b6040805192151583526001600160a01b0390911660208301528051918290030190f35b60006102c9336106a0565b1561031b576040805162461bcd60e51b815260206004820152601860248201527f436f6e74726163742063616e2774206265206120557365720000000000000000604482015290519081900360640190fd5b336000908152602081905260409020546001600160a01b03161561037c576040805162461bcd60e51b81526020600482015260136024820152725573657220616c72656164792065786973747360681b604482015290519081900360640190fd5b60006001600160a01b03166001836040518082805190602001908083835b602083106103b95780518252601f19909201916020918201910161039a565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220546001600160a01b031692909214915061043d9050576040805162461bcd60e51b81526020600482015260136024820152724e616d6520616c726561647920696e2055736560681b604482015290519081900360640190fd5b6000823360405161044d906106ac565b6001600160a01b03821660208083019190915260408083528451908301528351829160608301919086019080838360005b8381101561049657818101518382015260200161047e565b50505050905090810190601f1680156104c35780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f0801580156104e5573d6000803e3d6000fd5b509050806001846040518082805190602001908083835b6020831061051b5780518252601f1990920191602091820191016104fc565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003820190942080546001600160a01b03199081166001600160a01b03978816179091553360009081529182905293902080549093169385169390931790915550909392505050565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0392909216919091179055565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6060600280548060200260200160405190810160405280929190818152602001828054801561065a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161063c575b5050505050905090565b6000602081905290815260409020546001600160a01b031681565b6001600160a01b039081166000908152602081905260409020541680151591565b3b63ffffffff16151590565b611e78806106ba8339019056fe60806040523480156200001157600080fd5b5060405162001e7838038062001e78833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b5060405260200151915060009050620001076001600160e01b036200018416565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062001e58833981519152908290a350600280546001600160a01b0319163317905581516200016790600190602085019062000290565b506200017c816001600160e01b036200018916565b505062000332565b335b90565b6200019c6001600160e01b036200018416565b6000546001600160a01b03908116911614620001ff576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620002465760405162461bcd60e51b815260040180806020018281038252602681526020018062001e326026913960400191505060405180910390fd5b600080546040516001600160a01b038085169392169160008051602062001e5883398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002d357805160ff191683800117855562000303565b8280016001018555821562000303579182015b8281111562000303578251825591602001919060010190620002e6565b506200031192915062000315565b5090565b6200018691905b808211156200031157600081556001016200031c565b611af080620003426000396000f3fe60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063c45a0155116200006f578063c45a015514620001b5578063c6ab113114620001bf578063cf95aed614620001c9578063e25b8b5e1462000301578063f2fde38b146200032a57620000a0565b806306fdde0314620000a5578063715018a614620001275780638da5cb5b1462000133578063a3dc8ccf1462000159575b600080fd5b620000af62000353565b6040805160208082528351818301528351919283929083019185019080838360005b83811015620000eb578181015183820152602001620000d1565b50505050905090810190601f168015620001195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62000131620003e4565b005b6200013d6200049b565b604080516001600160a01b039092168252519081900360200190f35b62000163620004aa565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015620001a157818101518382015260200162000187565b505050509050019250505060405180910390f35b6200013d6200050e565b620001636200051d565b6200013160048036036060811015620001e157600080fd5b810190602081018135640100000000811115620001fd57600080fd5b8201836020820111156200021057600080fd5b803590602001918460018302840111640100000000831117156200023357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156200028757600080fd5b8201836020820111156200029a57600080fd5b80359060200191846001830284011164010000000083111715620002bd57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506200057f915050565b62000131600480360360208110156200031957600080fd5b50356001600160a01b0316620007df565b62000131600480360360208110156200034257600080fd5b50356001600160a01b031662000883565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015620003dc5780601f10620003b057610100808354040283529160200191620003dc565b820191906000526020600020905b815481529060010190602001808311620003be57829003601f168201915b505050505081565b620003ee62000992565b6000546001600160a01b0390811691161462000451576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b606060048054806020026020016040519081016040528092919081815260200182805480156200050457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620004e5575b5050505050905090565b6002546001600160a01b031681565b6060600380548060200260200160405190810160405280929190818152602001828054801562000504576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620004e5575050505050905090565b6200058962000992565b6000546001600160a01b03908116911614620005ec576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000838383620005fb6200049b565b6002546040516001600160a01b0390911690620006189062000996565b604081018490526001600160a01b0380841660608301528216608082015260a08082528651908201528551819060208083019160c08401918a019080838360005b838110156200067357818101518382015260200162000659565b50505050905090810190601f168015620006a15780820380516001836020036101000a031916815260200191505b50838103825287518152875160209182019189019080838360005b83811015620006d6578181015183820152602001620006bc565b50505050905090810190601f168015620007045780820380516001836020036101000a031916815260200191505b50975050505050505050604051809103906000f0801580156200072b573d6000803e3d6000fd5b506003805460018101825560009182527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0384811691821790925560025460408051635471e23760e01b815260048101939093525194955090911692635471e2379260248084019391929182900301818387803b158015620007c057600080fd5b505af1158015620007d5573d6000803e3d6000fd5b5050505050505050565b336001600160a01b0382161462000831576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21027b832b930ba34b7b960791b604482015290519081900360640190fd5b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6200088d62000992565b6000546001600160a01b03908116911614620008f0576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620009375760405162461bcd60e51b815260040180806020018281038252602681526020018062001a956026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6110f080620009a58339019056fe60806040523480156200001157600080fd5b50604051620010f0380380620010f0833981810160405260a08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060909201519093509091506000620001c86001600160e01b036200048416565b600080546001600160a01b0319166001600160a01b038316908117825560405192935091600080516020620010a3833981519152908290a350604080516000815260208082018084528251902088519093899301918291908401908083835b60208310620002485780518252601f19909201916020918201910162000227565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415620002c6576040805162461bcd60e51b815260206004820152600c60248201526b092dcecc2d8d2c840d0c2e6d60a31b604482015290519081900360640190fd5b336001600160a01b0316816001600160a01b031663a87430ba336001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200031957600080fd5b505afa1580156200032e573d6000803e3d6000fd5b505050506040513d60208110156200034557600080fd5b5051604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152516024808301926020929190829003018186803b1580156200038d57600080fd5b505afa158015620003a2573d6000803e3d6000fd5b505050506040513d6020811015620003b957600080fd5b50516001600160a01b031614620004025760405162461bcd60e51b815260040180806020018281038252602d815260200180620010c3602d913960400191505060405180910390fd5b84516200041790600190602088019062000590565b5083516200042d90600290602087019062000590565b506003839055600580546001600160a01b0319166001600160a01b038381169190911790915582166000908152600660205260409020805460ff19166001179055620004798262000489565b505050505062000632565b335b90565b6200049c6001600160e01b036200048416565b6000546001600160a01b03908116911614620004ff576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620005465760405162461bcd60e51b81526004018080602001828103825260268152602001806200107d6026913960400191505060405180910390fd5b600080546040516001600160a01b0380851693921691600080516020620010a383398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005d357805160ff191683800117855562000603565b8280016001018555821562000603579182015b8281111562000603578251825591602001919060010190620005e6565b506200061192915062000615565b5090565b6200048691905b808211156200061157600081556001016200061c565b610a3b80620006426000396000f3fe6080604052600436106100865760003560e01c8063715018a611610059578063715018a6146101c85780638da5cb5b146101dd578063a035b1fe1461020e578063d13319c414610235578063f2fde38b1461024a57610086565b806306fdde031461008b5780633bc5de30146101155780633ccfd60b146101a9578063466a9e75146101c0575b600080fd5b34801561009757600080fd5b506100a061027d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100da5781810151838201526020016100c2565b50505050905090810190601f1680156101075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012157600080fd5b5061012a610308565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561016d578181015183820152602001610155565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156101b557600080fd5b506101be6103a6565b005b6101be61043f565b3480156101d457600080fd5b506101be6106f8565b3480156101e957600080fd5b506101f26107ac565b604080516001600160a01b039092168252519081900360200190f35b34801561021a57600080fd5b506102236107bb565b60408051918252519081900360200190f35b34801561024157600080fd5b506100a06107c1565b34801561025657600080fd5b506101be6004803603602081101561026d57600080fd5b50356001600160a01b03166108d1565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b505050505081565b6003546002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815260609460009493909284918301828280156103975780601f1061036c57610100808354040283529160200191610397565b820191906000526020600020905b81548152906001019060200180831161037a57829003601f168201915b50505050509150915091509091565b6103ae6109db565b6000546001600160a01b03908116911614610410576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60405133904780156108fc02916000818181858888f1935050505015801561043c573d6000803e3d6000fd5b50565b600354341015610496576040805162461bcd60e51b815260206004820152601960248201527f506c656173652050617920636f6d706c65746520707269636500000000000000604482015290519081900360640190fd5b6005546040805163543a185d60e11b815233600482015290516000926001600160a01b03169163a87430ba916024808301926020929190829003018186803b1580156104e157600080fd5b505afa1580156104f5573d6000803e3d6000fd5b505050506040513d602081101561050b57600080fd5b50516001600160a01b0316141561055f576040805162461bcd60e51b8152602060048201526013602482015272155cd95c88139bdd08149959da5cdd195c9959606a1b604482015290519081900360640190fd5b3360009081526006602052604090205460ff16156105bb576040805162461bcd60e51b8152602060048201526014602482015273135d5cda58c8185b1c9958591e48189bdd59da1d60621b604482015290519081900360640190fd5b6003543411156105f7576003546040513391340380156108fc02916000818181858888f193505050501580156105f5573d6000803e3d6000fd5b505b33600081815260066020526040808220805460ff19166001179055600554815163c3c5a54760e01b815260048101949094528151929384936001600160a01b03929092169263c3c5a54792602480840193829003018186803b15801561065c57600080fd5b505afa158015610670573d6000803e3d6000fd5b505050506040513d604081101561068657600080fd5b5080516020909101516040805163712dc5af60e11b815230600482015290519194509192506001600160a01b0384169163e25b8b5e91602480830192600092919082900301818387803b1580156106dc57600080fd5b505af11580156106f0573d6000803e3d6000fd5b505050505050565b6107006109db565b6000546001600160a01b03908116911614610762576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60035481565b3360009081526006602052604090205460609060ff16806107fa57506107e56107ac565b6001600160a01b0316336001600160a01b0316145b610842576040805162461bcd60e51b8152602060048201526014602482015273506c656173652042757920746865204d7573696360601b604482015290519081900360640190fd5b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108c75780601f1061089c576101008083540402835291602001916108c7565b820191906000526020600020905b8154815290600101906020018083116108aa57829003601f168201915b5050505050905090565b6108d96109db565b6000546001600160a01b0390811691161461093b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166109805760405162461bcd60e51b81526004018080602001828103825260268152602001806109e06026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220622cd46ef438a41b8f43bb5cb45e9e40a0dcb3e13a496d5e36c5100249628a6864736f6c634300060000334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04f6e6c7920526567697374657265642075736572732063616e20696e766f6b65207468652066756e6374696f6e4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212204a309af61316daacfa38dd6c45e74b50aa28c9c6188200075757f36e360cc7c764736f6c634300060000334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220df98b7a35a323675575199d5cd3d1f39948e839976ac4acf558cb787f52b689b64736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806318b8275a146100675780635471e23714610129578063677cd575146101515780637678922e146101f7578063a87430ba1461024f578063c3c5a54714610275575b600080fd5b61010d6004803603602081101561007d57600080fd5b81019060208101813564010000000081111561009857600080fd5b8201836020820111156100aa57600080fd5b803590602001918460018302840111640100000000831117156100cc57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102be945050505050565b604080516001600160a01b039092168252519081900360200190f35b61014f6004803603602081101561013f57600080fd5b50356001600160a01b031661058a565b005b61010d6004803603602081101561016757600080fd5b81019060208101813564010000000081111561018257600080fd5b82018360208201111561019457600080fd5b803590602001918460018302840111640100000000831117156101b657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105dc945050505050565b6101ff610602565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561023b578181015183820152602001610223565b505050509050019250505060405180910390f35b61010d6004803603602081101561026557600080fd5b50356001600160a01b0316610664565b61029b6004803603602081101561028b57600080fd5b50356001600160a01b031661067f565b6040805192151583526001600160a01b0390911660208301528051918290030190f35b60006102c9336106a0565b1561031b576040805162461bcd60e51b815260206004820152601860248201527f436f6e74726163742063616e2774206265206120557365720000000000000000604482015290519081900360640190fd5b336000908152602081905260409020546001600160a01b03161561037c576040805162461bcd60e51b81526020600482015260136024820152725573657220616c72656164792065786973747360681b604482015290519081900360640190fd5b60006001600160a01b03166001836040518082805190602001908083835b602083106103b95780518252601f19909201916020918201910161039a565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220546001600160a01b031692909214915061043d9050576040805162461bcd60e51b81526020600482015260136024820152724e616d6520616c726561647920696e2055736560681b604482015290519081900360640190fd5b6000823360405161044d906106ac565b6001600160a01b03821660208083019190915260408083528451908301528351829160608301919086019080838360005b8381101561049657818101518382015260200161047e565b50505050905090810190601f1680156104c35780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f0801580156104e5573d6000803e3d6000fd5b509050806001846040518082805190602001908083835b6020831061051b5780518252601f1990920191602091820191016104fc565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003820190942080546001600160a01b03199081166001600160a01b03978816179091553360009081529182905293902080549093169385169390931790915550909392505050565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0392909216919091179055565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6060600280548060200260200160405190810160405280929190818152602001828054801561065a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161063c575b5050505050905090565b6000602081905290815260409020546001600160a01b031681565b6001600160a01b039081166000908152602081905260409020541680151591565b3b63ffffffff16151590565b611e78806106ba8339019056fe60806040523480156200001157600080fd5b5060405162001e7838038062001e78833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b5060405260200151915060009050620001076001600160e01b036200018416565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062001e58833981519152908290a350600280546001600160a01b0319163317905581516200016790600190602085019062000290565b506200017c816001600160e01b036200018916565b505062000332565b335b90565b6200019c6001600160e01b036200018416565b6000546001600160a01b03908116911614620001ff576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620002465760405162461bcd60e51b815260040180806020018281038252602681526020018062001e326026913960400191505060405180910390fd5b600080546040516001600160a01b038085169392169160008051602062001e5883398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002d357805160ff191683800117855562000303565b8280016001018555821562000303579182015b8281111562000303578251825591602001919060010190620002e6565b506200031192915062000315565b5090565b6200018691905b808211156200031157600081556001016200031c565b611af080620003426000396000f3fe60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063c45a0155116200006f578063c45a015514620001b5578063c6ab113114620001bf578063cf95aed614620001c9578063e25b8b5e1462000301578063f2fde38b146200032a57620000a0565b806306fdde0314620000a5578063715018a614620001275780638da5cb5b1462000133578063a3dc8ccf1462000159575b600080fd5b620000af62000353565b6040805160208082528351818301528351919283929083019185019080838360005b83811015620000eb578181015183820152602001620000d1565b50505050905090810190601f168015620001195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62000131620003e4565b005b6200013d6200049b565b604080516001600160a01b039092168252519081900360200190f35b62000163620004aa565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015620001a157818101518382015260200162000187565b505050509050019250505060405180910390f35b6200013d6200050e565b620001636200051d565b6200013160048036036060811015620001e157600080fd5b810190602081018135640100000000811115620001fd57600080fd5b8201836020820111156200021057600080fd5b803590602001918460018302840111640100000000831117156200023357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156200028757600080fd5b8201836020820111156200029a57600080fd5b80359060200191846001830284011164010000000083111715620002bd57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506200057f915050565b62000131600480360360208110156200031957600080fd5b50356001600160a01b0316620007df565b62000131600480360360208110156200034257600080fd5b50356001600160a01b031662000883565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015620003dc5780601f10620003b057610100808354040283529160200191620003dc565b820191906000526020600020905b815481529060010190602001808311620003be57829003601f168201915b505050505081565b620003ee62000992565b6000546001600160a01b0390811691161462000451576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b606060048054806020026020016040519081016040528092919081815260200182805480156200050457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620004e5575b5050505050905090565b6002546001600160a01b031681565b6060600380548060200260200160405190810160405280929190818152602001828054801562000504576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620004e5575050505050905090565b6200058962000992565b6000546001600160a01b03908116911614620005ec576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000838383620005fb6200049b565b6002546040516001600160a01b0390911690620006189062000996565b604081018490526001600160a01b0380841660608301528216608082015260a08082528651908201528551819060208083019160c08401918a019080838360005b838110156200067357818101518382015260200162000659565b50505050905090810190601f168015620006a15780820380516001836020036101000a031916815260200191505b50838103825287518152875160209182019189019080838360005b83811015620006d6578181015183820152602001620006bc565b50505050905090810190601f168015620007045780820380516001836020036101000a031916815260200191505b50975050505050505050604051809103906000f0801580156200072b573d6000803e3d6000fd5b506003805460018101825560009182527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0384811691821790925560025460408051635471e23760e01b815260048101939093525194955090911692635471e2379260248084019391929182900301818387803b158015620007c057600080fd5b505af1158015620007d5573d6000803e3d6000fd5b5050505050505050565b336001600160a01b0382161462000831576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21027b832b930ba34b7b960791b604482015290519081900360640190fd5b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6200088d62000992565b6000546001600160a01b03908116911614620008f0576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620009375760405162461bcd60e51b815260040180806020018281038252602681526020018062001a956026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6110f080620009a58339019056fe60806040523480156200001157600080fd5b50604051620010f0380380620010f0833981810160405260a08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060909201519093509091506000620001c86001600160e01b036200048416565b600080546001600160a01b0319166001600160a01b038316908117825560405192935091600080516020620010a3833981519152908290a350604080516000815260208082018084528251902088519093899301918291908401908083835b60208310620002485780518252601f19909201916020918201910162000227565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415620002c6576040805162461bcd60e51b815260206004820152600c60248201526b092dcecc2d8d2c840d0c2e6d60a31b604482015290519081900360640190fd5b336001600160a01b0316816001600160a01b031663a87430ba336001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200031957600080fd5b505afa1580156200032e573d6000803e3d6000fd5b505050506040513d60208110156200034557600080fd5b5051604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152516024808301926020929190829003018186803b1580156200038d57600080fd5b505afa158015620003a2573d6000803e3d6000fd5b505050506040513d6020811015620003b957600080fd5b50516001600160a01b031614620004025760405162461bcd60e51b815260040180806020018281038252602d815260200180620010c3602d913960400191505060405180910390fd5b84516200041790600190602088019062000590565b5083516200042d90600290602087019062000590565b506003839055600580546001600160a01b0319166001600160a01b038381169190911790915582166000908152600660205260409020805460ff19166001179055620004798262000489565b505050505062000632565b335b90565b6200049c6001600160e01b036200048416565b6000546001600160a01b03908116911614620004ff576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620005465760405162461bcd60e51b81526004018080602001828103825260268152602001806200107d6026913960400191505060405180910390fd5b600080546040516001600160a01b0380851693921691600080516020620010a383398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005d357805160ff191683800117855562000603565b8280016001018555821562000603579182015b8281111562000603578251825591602001919060010190620005e6565b506200061192915062000615565b5090565b6200048691905b808211156200061157600081556001016200061c565b610a3b80620006426000396000f3fe6080604052600436106100865760003560e01c8063715018a611610059578063715018a6146101c85780638da5cb5b146101dd578063a035b1fe1461020e578063d13319c414610235578063f2fde38b1461024a57610086565b806306fdde031461008b5780633bc5de30146101155780633ccfd60b146101a9578063466a9e75146101c0575b600080fd5b34801561009757600080fd5b506100a061027d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100da5781810151838201526020016100c2565b50505050905090810190601f1680156101075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012157600080fd5b5061012a610308565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561016d578181015183820152602001610155565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156101b557600080fd5b506101be6103a6565b005b6101be61043f565b3480156101d457600080fd5b506101be6106f8565b3480156101e957600080fd5b506101f26107ac565b604080516001600160a01b039092168252519081900360200190f35b34801561021a57600080fd5b506102236107bb565b60408051918252519081900360200190f35b34801561024157600080fd5b506100a06107c1565b34801561025657600080fd5b506101be6004803603602081101561026d57600080fd5b50356001600160a01b03166108d1565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b505050505081565b6003546002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815260609460009493909284918301828280156103975780601f1061036c57610100808354040283529160200191610397565b820191906000526020600020905b81548152906001019060200180831161037a57829003601f168201915b50505050509150915091509091565b6103ae6109db565b6000546001600160a01b03908116911614610410576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60405133904780156108fc02916000818181858888f1935050505015801561043c573d6000803e3d6000fd5b50565b600354341015610496576040805162461bcd60e51b815260206004820152601960248201527f506c656173652050617920636f6d706c65746520707269636500000000000000604482015290519081900360640190fd5b6005546040805163543a185d60e11b815233600482015290516000926001600160a01b03169163a87430ba916024808301926020929190829003018186803b1580156104e157600080fd5b505afa1580156104f5573d6000803e3d6000fd5b505050506040513d602081101561050b57600080fd5b50516001600160a01b0316141561055f576040805162461bcd60e51b8152602060048201526013602482015272155cd95c88139bdd08149959da5cdd195c9959606a1b604482015290519081900360640190fd5b3360009081526006602052604090205460ff16156105bb576040805162461bcd60e51b8152602060048201526014602482015273135d5cda58c8185b1c9958591e48189bdd59da1d60621b604482015290519081900360640190fd5b6003543411156105f7576003546040513391340380156108fc02916000818181858888f193505050501580156105f5573d6000803e3d6000fd5b505b33600081815260066020526040808220805460ff19166001179055600554815163c3c5a54760e01b815260048101949094528151929384936001600160a01b03929092169263c3c5a54792602480840193829003018186803b15801561065c57600080fd5b505afa158015610670573d6000803e3d6000fd5b505050506040513d604081101561068657600080fd5b5080516020909101516040805163712dc5af60e11b815230600482015290519194509192506001600160a01b0384169163e25b8b5e91602480830192600092919082900301818387803b1580156106dc57600080fd5b505af11580156106f0573d6000803e3d6000fd5b505050505050565b6107006109db565b6000546001600160a01b03908116911614610762576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60035481565b3360009081526006602052604090205460609060ff16806107fa57506107e56107ac565b6001600160a01b0316336001600160a01b0316145b610842576040805162461bcd60e51b8152602060048201526014602482015273506c656173652042757920746865204d7573696360601b604482015290519081900360640190fd5b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108c75780601f1061089c576101008083540402835291602001916108c7565b820191906000526020600020905b8154815290600101906020018083116108aa57829003601f168201915b5050505050905090565b6108d96109db565b6000546001600160a01b0390811691161461093b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166109805760405162461bcd60e51b81526004018080602001828103825260268152602001806109e06026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220622cd46ef438a41b8f43bb5cb45e9e40a0dcb3e13a496d5e36c5100249628a6864736f6c634300060000334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04f6e6c7920526567697374657265642075736572732063616e20696e766f6b65207468652066756e6374696f6e4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212204a309af61316daacfa38dd6c45e74b50aa28c9c6188200075757f36e360cc7c764736f6c634300060000334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220df98b7a35a323675575199d5cd3d1f39948e839976ac4acf558cb787f52b689b64736f6c63430006000033",
  "sourceMap": "279:2773:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;279:2773:0;;;;;;;",
  "deployedSourceMap": "279:2773:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;279:2773:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2024:510;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2024:510:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2024:510:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2024:510:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2024:510:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2024:510:0;;-1:-1:-1;2024:510:0;;-1:-1:-1;;;;;2024:510:0:i;:::-;;;;-1:-1:-1;;;;;2024:510:0;;;;;;;;;;;;;;2734:113;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2734:113:0;-1:-1:-1;;;;;2734:113:0;;:::i;:::-;;358:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;358:49:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;358:49:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;358:49:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;358:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;358:49:0;;-1:-1:-1;358:49:0;;-1:-1:-1;;;;;358:49:0:i;2949:101::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2949:101:0;;;;;;;;;;;;;;;;;306:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;306:46:0;-1:-1:-1;;;;;306:46:0;;:::i;1295:162::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1295:162:0;-1:-1:-1;;;;;1295:162:0;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1295:162:0;;;;;;;;;;;;;;;;2024:510;2077:12;2109:22;2120:10;2109;:22::i;:::-;2108:23;2100:60;;;;;-1:-1:-1;;;2100:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2184:10;2220:1;2178:17;;;;;;;;;;;-1:-1:-1;;;;;2178:17:0;:45;2170:77;;;;;-1:-1:-1;;;2170:77:0;;;;;;;;;;;;-1:-1:-1;;;2170:77:0;;;;;;;;;;;;;;;2306:1;-1:-1:-1;;;;;2265:44:0;:9;2275:5;2265:16;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2265:16:0;;;;;-1:-1:-1;2265:16:0;;;;;;;;;;;-1:-1:-1;;;;;2265:16:0;:44;;;;;-1:-1:-1;2257:76:0;;-1:-1:-1;2257:76:0;;;;-1:-1:-1;;;2257:76:0;;;;;;;;;;;;-1:-1:-1;;;2257:76:0;;;;;;;;;;;;;;;2352:25;2397:5;2404:10;2380:35;;;;;:::i;:::-;-1:-1:-1;;;;;2380:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2380:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2380:35:0;2352:63;;2444:12;2425:9;2435:5;2425:16;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2425:16:0;;;;;-1:-1:-1;2425:16:0;;;;;;;;;;;;:31;;-1:-1:-1;;;;;;2425:31:0;;;-1:-1:-1;;;;;2425:31:0;;;;;;;2472:10;-1:-1:-1;2466:17:0;;;;;;;;;;:32;;;;;;;;;;;;;;;-1:-1:-1;2466:32:0;;2024:510;-1:-1:-1;;;2024:510:0:o;2734:113::-;2807:12;27:10:-1;;39:1;23:18;;45:23;;-1:-1;2807:33:0;;;;;;;;-1:-1:-1;;;;;;2807:33:0;-1:-1:-1;;;;;2807:33:0;;;;;;;;;;2734:113::o;358:49::-;22:14:-1;;169:4;143:32;;;;;198:20;;358:49:0;224:31:-1;;156:18;;;283;;;;273:49;328:32;;358:49:0;-1:-1:-1;;;;;358:49:0;;:::o;2949:101::-;2991:22;3031:12;3024:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3024:19:0;;;;;;;;;;;;;;;;;;;;;;;2949:101;:::o;306:46::-;;;;;;;;;;;;;-1:-1:-1;;;;;306:46:0;;:::o;1295:162::-;-1:-1:-1;;;;;1401:15:0;;;1355:4;1401:15;;;;;;;;;;;;1393:38;;;;1295:162::o;774:191::-;901:21;949:8;;;;;774:191::o;279:2773::-;;;;;;;;:::o",
  "source": "pragma solidity >= 0.4.0 < 0.7.0;\n\nimport \"./UserContract.sol\";\nimport \"./MusicContract.sol\";\n\n/**\n * @title Factory Contract\n * @author Samarth Bhadane\n * @notice This contract is used as a factory for user contract and for storing address of all music contracts deployed.\n */\n\ncontract Factory{\n    \n    mapping (address => UserContract) public users;\n    mapping (string => UserContract) public userNames;\n    MusicContract[] musicLibrary;\n    \n    /**\n     * @notice Check if an address provided is a contract. If yes, return true else return false.\n     * @dev This function will return true if an address is a smart contract, else return false.\n     * @param _address is address for which check is to be done.\n     * @return boolean value (true or false).\n     */\n    function isContract(address _address) private view returns (bool){\n        uint32 size;\n        assembly {\n            size := extcodesize(_address)\n        }\n        return (size > 0);\n    }\n    \n    /**\n     * @notice Check if an address provided has Registered. If yes, return true, else false.\n     * @dev This function will return true if an address has registered using addUser(), else return false.\n     * @param _address is for which check is to be done.\n     * @return boolean value (true or false).\n     */\n    function isRegistered(address _address) public view returns(bool, UserContract){\n        return ((address(users[_address]) != address(0)), users[_address]);\n    }\n\n    /**\n     * @notice This function is used to Register new user.\n     * @dev This function will add a new user. The transaction will be revoked if a Smart Contract invokes this function.\n     *      After successful execution, the value of users[msg.sender] is set to true which shows successful registration\n     *      of user. If an user who has already registered invokes this function, the transaction will be revoked.\n     * @param _name is string. This name is assigned to UserContract.\n     * @return Returns address of deployed UserContract.\n     */\n    function addUser(string memory _name) public returns(UserContract){\n        require(!isContract(msg.sender), \"Contract can't be a User\");\n        require(users[msg.sender] == UserContract(address(0)), \"User already exists\");\n        require(userNames[_name] == UserContract(address(0)), \"Name already in Use\");\n        \n        UserContract userContract = new UserContract(_name, msg.sender);\n        userNames[_name] = userContract;\n        users[msg.sender] = userContract;\n        return userContract;\n    }\n    \n    /**\n     * @notice This function adds address to musicLibrary[] on addition of new music by user.\n     * @param _musicContract is instance of MusicContract which is to be added.\n     */\n    function addMusicToLibrary(MusicContract _musicContract) public{\n        musicLibrary.push(_musicContract);\n    }\n    \n    /**\n     * @return Returns the array musicLibrary[] which is collection musics.\n     */\n    function getLibrary() public view returns(MusicContract[] memory){\n        return musicLibrary;\n    }\n}",
  "sourcePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol",
  "ast": {
    "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol",
    "exportedSymbols": {
      "Factory": [
        150
      ]
    },
    "id": 151,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/UserContract.sol",
        "file": "./UserContract.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 151,
        "sourceUnit": 558,
        "src": "35:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/MusicContract.sol",
        "file": "./MusicContract.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 151,
        "sourceUnit": 422,
        "src": "64:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          557
        ],
        "contractKind": "contract",
        "documentation": "@title Factory Contract\n@author Samarth Bhadane\n@notice This contract is used as a factory for user contract and for storing address of all music contracts deployed.",
        "fullyImplemented": true,
        "id": 150,
        "linearizedBaseContracts": [
          150
        ],
        "name": "Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a87430ba",
            "id": 7,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 150,
            "src": "306:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$557_$",
              "typeString": "mapping(address => contract UserContract)"
            },
            "typeName": {
              "id": 6,
              "keyType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "315:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "306:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$557_$",
                "typeString": "mapping(address => contract UserContract)"
              },
              "valueType": {
                "contractScope": null,
                "id": 5,
                "name": "UserContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 557,
                "src": "326:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_UserContract_$557",
                  "typeString": "contract UserContract"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "677cd575",
            "id": 11,
            "name": "userNames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 150,
            "src": "358:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_contract$_UserContract_$557_$",
              "typeString": "mapping(string => contract UserContract)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "367:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "358:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_contract$_UserContract_$557_$",
                "typeString": "mapping(string => contract UserContract)"
              },
              "valueType": {
                "contractScope": null,
                "id": 9,
                "name": "UserContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 557,
                "src": "377:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_UserContract_$557",
                  "typeString": "contract UserContract"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "name": "musicLibrary",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 150,
            "src": "413:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
              "typeString": "contract MusicContract[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 12,
                "name": "MusicContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 421,
                "src": "413:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MusicContract_$421",
                  "typeString": "contract MusicContract"
                }
              },
              "id": 13,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "413:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage_ptr",
                "typeString": "contract MusicContract[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "839:126:0",
              "statements": [
                {
                  "assignments": [
                    22
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 30,
                      "src": "849:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 21,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "849:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "849:11:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "879:53:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "893:29:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "_address",
                              "nodeType": "YulIdentifier",
                              "src": "913:8:0"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "901:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "901:21:0"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "893:4:0"
                          }
                        ]
                      }
                    ]
                  },
                  "externalReferences": [
                    {
                      "declaration": 16,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "913:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 22,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "893:4:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 24,
                  "nodeType": "InlineAssembly",
                  "src": "870:62:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 25,
                          "name": "size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "949:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "956:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "949:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 28,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "948:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 20,
                  "id": 29,
                  "nodeType": "Return",
                  "src": "941:17:0"
                }
              ]
            },
            "documentation": "@notice Check if an address provided is a contract. If yes, return true else return false.\n@dev This function will return true if an address is a smart contract, else return false.\n@param _address is address for which check is to be done.\n@return boolean value (true or false).",
            "id": 31,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 31,
                  "src": "794:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "793:18:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 31,
                  "src": "834:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "833:6:0"
            },
            "scope": 150,
            "src": "774:191:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "1374:83:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 42,
                                    "name": "users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7,
                                    "src": "1401:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$557_$",
                                      "typeString": "mapping(address => contract UserContract)"
                                    }
                                  },
                                  "id": 44,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 43,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33,
                                    "src": "1407:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1401:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UserContract_$557",
                                    "typeString": "contract UserContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UserContract_$557",
                                    "typeString": "contract UserContract"
                                  }
                                ],
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1393:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 40,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1393:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 45,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1393:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 48,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1429:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 47,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1421:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 46,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1421:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1421:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "1393:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 51,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1392:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1434:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$557_$",
                            "typeString": "mapping(address => contract UserContract)"
                          }
                        },
                        "id": 54,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 53,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1440:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1434:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$557",
                          "typeString": "contract UserContract"
                        }
                      }
                    ],
                    "id": 55,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1391:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_contract$_UserContract_$557_$",
                      "typeString": "tuple(bool,contract UserContract)"
                    }
                  },
                  "functionReturnParameters": 39,
                  "id": 56,
                  "nodeType": "Return",
                  "src": "1384:66:0"
                }
              ]
            },
            "documentation": "@notice Check if an address provided has Registered. If yes, return true, else false.\n@dev This function will return true if an address has registered using addUser(), else return false.\n@param _address is for which check is to be done.\n@return boolean value (true or false).",
            "functionSelector": "c3c5a547",
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 58,
                  "src": "1317:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1316:18:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 58,
                  "src": "1355:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 58,
                  "src": "1361:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserContract_$557",
                    "typeString": "contract UserContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 37,
                    "name": "UserContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 557,
                    "src": "1361:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$557",
                      "typeString": "contract UserContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1354:20:0"
            },
            "scope": 150,
            "src": "1295:162:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "2090:444:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2108:23:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 67,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 698,
                                "src": "2120:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2120:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 66,
                            "name": "isContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "2109:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2109:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742063616e277420626520612055736572",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2133:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9916cfcfd2248c72bb9993ee4475e078d4589079b89c0747877491f683600a3e",
                          "typeString": "literal_string \"Contract can't be a User\""
                        },
                        "value": "Contract can't be a User"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9916cfcfd2248c72bb9993ee4475e078d4589079b89c0747877491f683600a3e",
                          "typeString": "literal_string \"Contract can't be a User\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        701,
                        702
                      ],
                      "referencedDeclaration": 702,
                      "src": "2100:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2100:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "2100:60:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_UserContract_$557",
                          "typeString": "contract UserContract"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2178:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$557_$",
                              "typeString": "mapping(address => contract UserContract)"
                            }
                          },
                          "id": 78,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 76,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 698,
                              "src": "2184:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2184:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2178:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserContract_$557",
                            "typeString": "contract UserContract"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 82,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2220:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2212:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 80,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2212:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2212:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 79,
                            "name": "UserContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 557,
                            "src": "2199:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_UserContract_$557_$",
                              "typeString": "type(contract UserContract)"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2199:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserContract_$557",
                            "typeString": "contract UserContract"
                          }
                        },
                        "src": "2178:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5573657220616c726561647920657869737473",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2225:21:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72a6a651fb4cd9ff87b3ff041092e509401f47f92bb4122586fcb66064d104bd",
                          "typeString": "literal_string \"User already exists\""
                        },
                        "value": "User already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72a6a651fb4cd9ff87b3ff041092e509401f47f92bb4122586fcb66064d104bd",
                          "typeString": "literal_string \"User already exists\""
                        }
                      ],
                      "id": 74,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        701,
                        702
                      ],
                      "referencedDeclaration": 702,
                      "src": "2170:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2170:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:77:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_UserContract_$557",
                          "typeString": "contract UserContract"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "userNames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "2265:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_contract$_UserContract_$557_$",
                              "typeString": "mapping(string memory => contract UserContract)"
                            }
                          },
                          "id": 92,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 91,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "2275:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2265:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserContract_$557",
                            "typeString": "contract UserContract"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 96,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2306:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 95,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2298:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 94,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2298:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2298:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 93,
                            "name": "UserContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 557,
                            "src": "2285:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_UserContract_$557_$",
                              "typeString": "type(contract UserContract)"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2285:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserContract_$557",
                            "typeString": "contract UserContract"
                          }
                        },
                        "src": "2265:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e616d6520616c726561647920696e20557365",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2311:21:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3fb8998ef628b4ab9295ba95dce19c19f3aaff2146cb061098e5e190361ac401",
                          "typeString": "literal_string \"Name already in Use\""
                        },
                        "value": "Name already in Use"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3fb8998ef628b4ab9295ba95dce19c19f3aaff2146cb061098e5e190361ac401",
                          "typeString": "literal_string \"Name already in Use\""
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        701,
                        702
                      ],
                      "referencedDeclaration": 702,
                      "src": "2257:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2257:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "2257:76:0"
                },
                {
                  "assignments": [
                    104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104,
                      "name": "userContract",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 127,
                      "src": "2352:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$557",
                        "typeString": "contract UserContract"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 103,
                        "name": "UserContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 557,
                        "src": "2352:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$557",
                          "typeString": "contract UserContract"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 111,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "2397:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "2404:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2404:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2380:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_UserContract_$557_$",
                        "typeString": "function (string memory,address) returns (contract UserContract)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 105,
                        "name": "UserContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 557,
                        "src": "2384:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$557",
                          "typeString": "contract UserContract"
                        }
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2380:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$557",
                      "typeString": "contract UserContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2352:63:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "userNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2425:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_contract$_UserContract_$557_$",
                          "typeString": "mapping(string memory => contract UserContract)"
                        }
                      },
                      "id": 114,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 113,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "2435:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2425:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$557",
                        "typeString": "contract UserContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "userContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2444:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$557",
                        "typeString": "contract UserContract"
                      }
                    },
                    "src": "2425:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$557",
                      "typeString": "contract UserContract"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 118,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2466:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$557_$",
                          "typeString": "mapping(address => contract UserContract)"
                        }
                      },
                      "id": 121,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "2472:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2472:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2466:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$557",
                        "typeString": "contract UserContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "userContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2486:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$557",
                        "typeString": "contract UserContract"
                      }
                    },
                    "src": "2466:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$557",
                      "typeString": "contract UserContract"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2466:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "name": "userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 104,
                    "src": "2515:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$557",
                      "typeString": "contract UserContract"
                    }
                  },
                  "functionReturnParameters": 64,
                  "id": 126,
                  "nodeType": "Return",
                  "src": "2508:19:0"
                }
              ]
            },
            "documentation": "@notice This function is used to Register new user.\n@dev This function will add a new user. The transaction will be revoked if a Smart Contract invokes this function.\n     After successful execution, the value of users[msg.sender] is set to true which shows successful registration\n     of user. If an user who has already registered invokes this function, the transaction will be revoked.\n@param _name is string. This name is assigned to UserContract.\n@return Returns address of deployed UserContract.",
            "functionSelector": "18b8275a",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addUser",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 128,
                  "src": "2041:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2041:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2040:21:0"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 128,
                  "src": "2077:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserContract_$557",
                    "typeString": "contract UserContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 62,
                    "name": "UserContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 557,
                    "src": "2077:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$557",
                      "typeString": "contract UserContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2076:14:0"
            },
            "scope": 150,
            "src": "2024:510:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "2797:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "_musicContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "2825:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "musicLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2807:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
                          "typeString": "contract MusicContract[] storage ref"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2807:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_MusicContract_$421_$returns$__$",
                        "typeString": "function (contract MusicContract)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2807:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "2807:33:0"
                }
              ]
            },
            "documentation": "@notice This function adds address to musicLibrary[] on addition of new music by user.\n@param _musicContract is instance of MusicContract which is to be added.",
            "functionSelector": "5471e237",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMusicToLibrary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "name": "_musicContract",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 140,
                  "src": "2761:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MusicContract_$421",
                    "typeString": "contract MusicContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 129,
                    "name": "MusicContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 421,
                    "src": "2761:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MusicContract_$421",
                      "typeString": "contract MusicContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2760:30:0"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2797:0:0"
            },
            "scope": 150,
            "src": "2734:113:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "3014:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 146,
                    "name": "musicLibrary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "3031:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
                      "typeString": "contract MusicContract[] storage ref"
                    }
                  },
                  "functionReturnParameters": 145,
                  "id": 147,
                  "nodeType": "Return",
                  "src": "3024:19:0"
                }
              ]
            },
            "documentation": "@return Returns the array musicLibrary[] which is collection musics.",
            "functionSelector": "7678922e",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLibrary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2968:2:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "2991:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_memory_ptr",
                    "typeString": "contract MusicContract[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 142,
                      "name": "MusicContract",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 421,
                      "src": "2991:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MusicContract_$421",
                        "typeString": "contract MusicContract"
                      }
                    },
                    "id": 143,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2991:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage_ptr",
                      "typeString": "contract MusicContract[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2990:24:0"
            },
            "scope": 150,
            "src": "2949:101:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 151,
        "src": "279:2773:0"
      }
    ],
    "src": "0:3052:0"
  },
  "legacyAST": {
    "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol",
    "exportedSymbols": {
      "Factory": [
        150
      ]
    },
    "id": 151,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/UserContract.sol",
        "file": "./UserContract.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 151,
        "sourceUnit": 558,
        "src": "35:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/MusicContract.sol",
        "file": "./MusicContract.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 151,
        "sourceUnit": 422,
        "src": "64:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          557
        ],
        "contractKind": "contract",
        "documentation": "@title Factory Contract\n@author Samarth Bhadane\n@notice This contract is used as a factory for user contract and for storing address of all music contracts deployed.",
        "fullyImplemented": true,
        "id": 150,
        "linearizedBaseContracts": [
          150
        ],
        "name": "Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a87430ba",
            "id": 7,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 150,
            "src": "306:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$557_$",
              "typeString": "mapping(address => contract UserContract)"
            },
            "typeName": {
              "id": 6,
              "keyType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "315:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "306:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$557_$",
                "typeString": "mapping(address => contract UserContract)"
              },
              "valueType": {
                "contractScope": null,
                "id": 5,
                "name": "UserContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 557,
                "src": "326:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_UserContract_$557",
                  "typeString": "contract UserContract"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "677cd575",
            "id": 11,
            "name": "userNames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 150,
            "src": "358:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_contract$_UserContract_$557_$",
              "typeString": "mapping(string => contract UserContract)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "367:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "358:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_contract$_UserContract_$557_$",
                "typeString": "mapping(string => contract UserContract)"
              },
              "valueType": {
                "contractScope": null,
                "id": 9,
                "name": "UserContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 557,
                "src": "377:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_UserContract_$557",
                  "typeString": "contract UserContract"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "name": "musicLibrary",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 150,
            "src": "413:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
              "typeString": "contract MusicContract[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 12,
                "name": "MusicContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 421,
                "src": "413:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MusicContract_$421",
                  "typeString": "contract MusicContract"
                }
              },
              "id": 13,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "413:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage_ptr",
                "typeString": "contract MusicContract[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "839:126:0",
              "statements": [
                {
                  "assignments": [
                    22
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 30,
                      "src": "849:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 21,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "849:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "849:11:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "879:53:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "893:29:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "_address",
                              "nodeType": "YulIdentifier",
                              "src": "913:8:0"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "901:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "901:21:0"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "893:4:0"
                          }
                        ]
                      }
                    ]
                  },
                  "externalReferences": [
                    {
                      "declaration": 16,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "913:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 22,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "893:4:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 24,
                  "nodeType": "InlineAssembly",
                  "src": "870:62:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 25,
                          "name": "size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "949:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "956:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "949:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 28,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "948:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 20,
                  "id": 29,
                  "nodeType": "Return",
                  "src": "941:17:0"
                }
              ]
            },
            "documentation": "@notice Check if an address provided is a contract. If yes, return true else return false.\n@dev This function will return true if an address is a smart contract, else return false.\n@param _address is address for which check is to be done.\n@return boolean value (true or false).",
            "id": 31,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 31,
                  "src": "794:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "793:18:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 31,
                  "src": "834:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "833:6:0"
            },
            "scope": 150,
            "src": "774:191:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "1374:83:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 42,
                                    "name": "users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7,
                                    "src": "1401:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$557_$",
                                      "typeString": "mapping(address => contract UserContract)"
                                    }
                                  },
                                  "id": 44,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 43,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33,
                                    "src": "1407:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1401:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UserContract_$557",
                                    "typeString": "contract UserContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UserContract_$557",
                                    "typeString": "contract UserContract"
                                  }
                                ],
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1393:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 40,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1393:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 45,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1393:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 48,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1429:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 47,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1421:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 46,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1421:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1421:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "1393:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 51,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1392:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1434:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$557_$",
                            "typeString": "mapping(address => contract UserContract)"
                          }
                        },
                        "id": 54,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 53,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1440:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1434:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$557",
                          "typeString": "contract UserContract"
                        }
                      }
                    ],
                    "id": 55,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1391:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_contract$_UserContract_$557_$",
                      "typeString": "tuple(bool,contract UserContract)"
                    }
                  },
                  "functionReturnParameters": 39,
                  "id": 56,
                  "nodeType": "Return",
                  "src": "1384:66:0"
                }
              ]
            },
            "documentation": "@notice Check if an address provided has Registered. If yes, return true, else false.\n@dev This function will return true if an address has registered using addUser(), else return false.\n@param _address is for which check is to be done.\n@return boolean value (true or false).",
            "functionSelector": "c3c5a547",
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 58,
                  "src": "1317:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1316:18:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 58,
                  "src": "1355:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 58,
                  "src": "1361:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserContract_$557",
                    "typeString": "contract UserContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 37,
                    "name": "UserContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 557,
                    "src": "1361:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$557",
                      "typeString": "contract UserContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1354:20:0"
            },
            "scope": 150,
            "src": "1295:162:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "2090:444:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2108:23:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 67,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 698,
                                "src": "2120:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2120:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 66,
                            "name": "isContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "2109:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2109:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742063616e277420626520612055736572",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2133:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9916cfcfd2248c72bb9993ee4475e078d4589079b89c0747877491f683600a3e",
                          "typeString": "literal_string \"Contract can't be a User\""
                        },
                        "value": "Contract can't be a User"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9916cfcfd2248c72bb9993ee4475e078d4589079b89c0747877491f683600a3e",
                          "typeString": "literal_string \"Contract can't be a User\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        701,
                        702
                      ],
                      "referencedDeclaration": 702,
                      "src": "2100:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2100:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "2100:60:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_UserContract_$557",
                          "typeString": "contract UserContract"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2178:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$557_$",
                              "typeString": "mapping(address => contract UserContract)"
                            }
                          },
                          "id": 78,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 76,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 698,
                              "src": "2184:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2184:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2178:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserContract_$557",
                            "typeString": "contract UserContract"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 82,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2220:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2212:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 80,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2212:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2212:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 79,
                            "name": "UserContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 557,
                            "src": "2199:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_UserContract_$557_$",
                              "typeString": "type(contract UserContract)"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2199:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserContract_$557",
                            "typeString": "contract UserContract"
                          }
                        },
                        "src": "2178:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5573657220616c726561647920657869737473",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2225:21:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72a6a651fb4cd9ff87b3ff041092e509401f47f92bb4122586fcb66064d104bd",
                          "typeString": "literal_string \"User already exists\""
                        },
                        "value": "User already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72a6a651fb4cd9ff87b3ff041092e509401f47f92bb4122586fcb66064d104bd",
                          "typeString": "literal_string \"User already exists\""
                        }
                      ],
                      "id": 74,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        701,
                        702
                      ],
                      "referencedDeclaration": 702,
                      "src": "2170:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2170:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:77:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_UserContract_$557",
                          "typeString": "contract UserContract"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "userNames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "2265:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_contract$_UserContract_$557_$",
                              "typeString": "mapping(string memory => contract UserContract)"
                            }
                          },
                          "id": 92,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 91,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "2275:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2265:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserContract_$557",
                            "typeString": "contract UserContract"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 96,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2306:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 95,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2298:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 94,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2298:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2298:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 93,
                            "name": "UserContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 557,
                            "src": "2285:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_UserContract_$557_$",
                              "typeString": "type(contract UserContract)"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2285:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserContract_$557",
                            "typeString": "contract UserContract"
                          }
                        },
                        "src": "2265:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e616d6520616c726561647920696e20557365",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2311:21:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3fb8998ef628b4ab9295ba95dce19c19f3aaff2146cb061098e5e190361ac401",
                          "typeString": "literal_string \"Name already in Use\""
                        },
                        "value": "Name already in Use"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3fb8998ef628b4ab9295ba95dce19c19f3aaff2146cb061098e5e190361ac401",
                          "typeString": "literal_string \"Name already in Use\""
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        701,
                        702
                      ],
                      "referencedDeclaration": 702,
                      "src": "2257:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2257:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "2257:76:0"
                },
                {
                  "assignments": [
                    104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104,
                      "name": "userContract",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 127,
                      "src": "2352:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$557",
                        "typeString": "contract UserContract"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 103,
                        "name": "UserContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 557,
                        "src": "2352:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$557",
                          "typeString": "contract UserContract"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 111,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "2397:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "2404:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2404:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2380:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_UserContract_$557_$",
                        "typeString": "function (string memory,address) returns (contract UserContract)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 105,
                        "name": "UserContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 557,
                        "src": "2384:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$557",
                          "typeString": "contract UserContract"
                        }
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2380:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$557",
                      "typeString": "contract UserContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2352:63:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "userNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2425:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_contract$_UserContract_$557_$",
                          "typeString": "mapping(string memory => contract UserContract)"
                        }
                      },
                      "id": 114,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 113,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "2435:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2425:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$557",
                        "typeString": "contract UserContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "userContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2444:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$557",
                        "typeString": "contract UserContract"
                      }
                    },
                    "src": "2425:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$557",
                      "typeString": "contract UserContract"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 118,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2466:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$557_$",
                          "typeString": "mapping(address => contract UserContract)"
                        }
                      },
                      "id": 121,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "2472:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2472:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2466:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$557",
                        "typeString": "contract UserContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "userContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2486:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$557",
                        "typeString": "contract UserContract"
                      }
                    },
                    "src": "2466:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$557",
                      "typeString": "contract UserContract"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2466:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "name": "userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 104,
                    "src": "2515:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$557",
                      "typeString": "contract UserContract"
                    }
                  },
                  "functionReturnParameters": 64,
                  "id": 126,
                  "nodeType": "Return",
                  "src": "2508:19:0"
                }
              ]
            },
            "documentation": "@notice This function is used to Register new user.\n@dev This function will add a new user. The transaction will be revoked if a Smart Contract invokes this function.\n     After successful execution, the value of users[msg.sender] is set to true which shows successful registration\n     of user. If an user who has already registered invokes this function, the transaction will be revoked.\n@param _name is string. This name is assigned to UserContract.\n@return Returns address of deployed UserContract.",
            "functionSelector": "18b8275a",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addUser",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 128,
                  "src": "2041:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2041:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2040:21:0"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 128,
                  "src": "2077:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserContract_$557",
                    "typeString": "contract UserContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 62,
                    "name": "UserContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 557,
                    "src": "2077:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$557",
                      "typeString": "contract UserContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2076:14:0"
            },
            "scope": 150,
            "src": "2024:510:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "2797:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "_musicContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "2825:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "musicLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2807:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
                          "typeString": "contract MusicContract[] storage ref"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2807:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_MusicContract_$421_$returns$__$",
                        "typeString": "function (contract MusicContract)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2807:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "2807:33:0"
                }
              ]
            },
            "documentation": "@notice This function adds address to musicLibrary[] on addition of new music by user.\n@param _musicContract is instance of MusicContract which is to be added.",
            "functionSelector": "5471e237",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMusicToLibrary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "name": "_musicContract",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 140,
                  "src": "2761:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MusicContract_$421",
                    "typeString": "contract MusicContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 129,
                    "name": "MusicContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 421,
                    "src": "2761:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MusicContract_$421",
                      "typeString": "contract MusicContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2760:30:0"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2797:0:0"
            },
            "scope": 150,
            "src": "2734:113:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "3014:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 146,
                    "name": "musicLibrary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "3031:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
                      "typeString": "contract MusicContract[] storage ref"
                    }
                  },
                  "functionReturnParameters": 145,
                  "id": 147,
                  "nodeType": "Return",
                  "src": "3024:19:0"
                }
              ]
            },
            "documentation": "@return Returns the array musicLibrary[] which is collection musics.",
            "functionSelector": "7678922e",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLibrary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2968:2:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "2991:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_memory_ptr",
                    "typeString": "contract MusicContract[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 142,
                      "name": "MusicContract",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 421,
                      "src": "2991:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MusicContract_$421",
                        "typeString": "contract MusicContract"
                      }
                    },
                    "id": 143,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2991:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage_ptr",
                      "typeString": "contract MusicContract[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2990:24:0"
            },
            "scope": 150,
            "src": "2949:101:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 151,
        "src": "279:2773:0"
      }
    ],
    "src": "0:3052:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x745d33B64Ec06A529eaaD5C9AB053F2b89867ad4",
      "transactionHash": "0xee78135307327bd2bf00318a02628769e2b0f117cc372a58e2a80f0490e0ff41"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-12-03T04:33:40.215Z",
  "devdoc": {
    "author": "Samarth Bhadane",
    "methods": {
      "addMusicToLibrary(address)": {
        "params": {
          "_musicContract": "is instance of MusicContract which is to be added."
        }
      },
      "addUser(string)": {
        "details": "This function will add a new user. The transaction will be revoked if a Smart Contract invokes this function.     After successful execution, the value of users[msg.sender] is set to true which shows successful registration     of user. If an user who has already registered invokes this function, the transaction will be revoked.",
        "params": {
          "_name": "is string. This name is assigned to UserContract."
        },
        "returns": {
          "_0": "Returns address of deployed UserContract."
        }
      },
      "isRegistered(address)": {
        "details": "This function will return true if an address has registered using addUser(), else return false.",
        "params": {
          "_address": "is for which check is to be done."
        },
        "returns": {
          "_0": "boolean value (true or false)."
        }
      }
    },
    "title": "Factory Contract"
  },
  "userdoc": {
    "methods": {
      "addMusicToLibrary(address)": {
        "notice": "This function adds address to musicLibrary[] on addition of new music by user."
      },
      "addUser(string)": {
        "notice": "This function is used to Register new user."
      },
      "isRegistered(address)": {
        "notice": "Check if an address provided has Registered. If yes, return true, else false."
      }
    },
    "notice": "This contract is used as a factory for user contract and for storing address of all music contracts deployed."
  }
}