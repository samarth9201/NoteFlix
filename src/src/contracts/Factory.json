{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "contract UserContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "contract UserContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [
        {
          "internalType": "contract UserContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract MusicContract",
          "name": "_musicContract",
          "type": "address"
        }
      ],
      "name": "addMusicToLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLibrary",
      "outputs": [
        {
          "internalType": "contract MusicContract[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract MusicContract\",\"name\":\"_musicContract\",\"type\":\"address\"}],\"name\":\"addMusicToLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[{\"internalType\":\"contract UserContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLibrary\",\"outputs\":[{\"internalType\":\"contract MusicContract[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"contract UserContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"contract UserContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol\":{\"keccak256\":\"0xaeda02f15c5a5962d10f1d6296900e67b31011401c422b97ba07626f1170afbe\",\"urls\":[\"bzz-raw://404e917d4b4639d98a62b00e42f020e548f786d9e88f4da1f73773e307a19512\",\"dweb:/ipfs/QmRY5WhXSr8SJEbdMx6yam4KJHZDd1r4P3kxsKZ32fUDZn\"]},\"/home/samarth/Blockchain/Dapps/music-stream/contracts/MusicContract.sol\":{\"keccak256\":\"0x662838df9cd655d8deffb7325fccaab237c1db2f1049925c881bf79817f14ccc\",\"urls\":[\"bzz-raw://fc26975b5f678033f138113f3564315ad8d6c63d3d30b04ab9426157e0c5dfa5\",\"dweb:/ipfs/QmULmejQLGc91T1jF41eRWLWjCqep3TVUpeQFq2RbEC7ZF\"]},\"/home/samarth/Blockchain/Dapps/music-stream/contracts/UserContract.sol\":{\"keccak256\":\"0x9e45d7be00a3ff44da273d16c9836f605ffad0d65d3883b1e0b4688e8e818813\",\"urls\":[\"bzz-raw://09d40357d46abe05c8b6a36d071179196324a4ba24568f3366fffcdbb1207c02\",\"dweb:/ipfs/QmQTikNzsLR9uBXWdGnHbJqruf5KncNH3thycqjgvSZEeA\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506121d0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806318b8275a1461005c5780635471e2371461011e5780637678922e14610146578063a87430ba1461019e578063c3c5a547146101c4575b600080fd5b6101026004803603602081101561007257600080fd5b81019060208101813564010000000081111561008d57600080fd5b82018360208201111561009f57600080fd5b803590602001918460018302840111640100000000831117156100c157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061020d945050505050565b604080516001600160a01b039092168252519081900360200190f35b6101446004803603602081101561013457600080fd5b50356001600160a01b03166103a3565b005b61014e6103f4565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561018a578181015183820152602001610172565b505050509050019250505060405180910390f35b610102600480360360208110156101b457600080fd5b50356001600160a01b0316610456565b6101ea600480360360208110156101da57600080fd5b50356001600160a01b0316610471565b6040805192151583526001600160a01b0390911660208301528051918290030190f35b600061021833610492565b1561026a576040805162461bcd60e51b815260206004820152601860248201527f436f6e74726163742063616e2774206265206120557365720000000000000000604482015290519081900360640190fd5b336000908152602081905260409020546001600160a01b0316156102cb576040805162461bcd60e51b81526020600482015260136024820152725573657220616c72656164792065786973747360681b604482015290519081900360640190fd5b600082336040516102db9061049e565b6001600160a01b03821660208083019190915260408083528451908301528351829160608301919086019080838360005b8381101561032457818101518382015260200161030c565b50505050905090810190601f1680156103515780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f080158015610373573d6000803e3d6000fd5b5033600090815260208190526040902080546001600160a01b0319166001600160a01b0383161790559392505050565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0392909216919091179055565b6060600180548060200260200160405190810160405280929190818152602001828054801561044c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161042e575b5050505050905090565b6000602081905290815260409020546001600160a01b031681565b6001600160a01b039081166000908152602081905260409020541680151591565b3b63ffffffff16151590565b611cef806104ac8339019056fe60806040523480156200001157600080fd5b5060405162001cef38038062001cef833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b5060405260200151915060009050620001076001600160e01b036200018416565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062001ccf833981519152908290a350600280546001600160a01b0319163317905581516200016790600190602085019062000290565b506200017c816001600160e01b036200018916565b505062000332565b335b90565b6200019c6001600160e01b036200018416565b6000546001600160a01b03908116911614620001ff576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620002465760405162461bcd60e51b815260040180806020018281038252602681526020018062001ca96026913960400191505060405180910390fd5b600080546040516001600160a01b038085169392169160008051602062001ccf83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002d357805160ff191683800117855562000303565b8280016001018555821562000303579182015b8281111562000303578251825591602001919060010190620002e6565b506200031192915062000315565b5090565b6200018691905b808211156200031157600081556001016200031c565b61196780620003426000396000f3fe60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063c45a0155116200006f578063c45a015514620001b5578063c6ab113114620001bf578063cf95aed614620001c9578063e25b8b5e1462000301578063f2fde38b146200032a57620000a0565b806306fdde0314620000a5578063715018a614620001275780638da5cb5b1462000133578063a3dc8ccf1462000159575b600080fd5b620000af62000353565b6040805160208082528351818301528351919283929083019185019080838360005b83811015620000eb578181015183820152602001620000d1565b50505050905090810190601f168015620001195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62000131620003e4565b005b6200013d6200049b565b604080516001600160a01b039092168252519081900360200190f35b62000163620004aa565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015620001a157818101518382015260200162000187565b505050509050019250505060405180910390f35b6200013d6200050e565b620001636200051d565b6200013160048036036060811015620001e157600080fd5b810190602081018135640100000000811115620001fd57600080fd5b8201836020820111156200021057600080fd5b803590602001918460018302840111640100000000831117156200023357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156200028757600080fd5b8201836020820111156200029a57600080fd5b80359060200191846001830284011164010000000083111715620002bd57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506200057f915050565b62000131600480360360208110156200031957600080fd5b50356001600160a01b0316620007df565b62000131600480360360208110156200034257600080fd5b50356001600160a01b031662000883565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015620003dc5780601f10620003b057610100808354040283529160200191620003dc565b820191906000526020600020905b815481529060010190602001808311620003be57829003601f168201915b505050505081565b620003ee62000992565b6000546001600160a01b0390811691161462000451576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b606060048054806020026020016040519081016040528092919081815260200182805480156200050457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620004e5575b5050505050905090565b6002546001600160a01b031681565b6060600380548060200260200160405190810160405280929190818152602001828054801562000504576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620004e5575050505050905090565b6200058962000992565b6000546001600160a01b03908116911614620005ec576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000838383620005fb6200049b565b6002546040516001600160a01b0390911690620006189062000996565b604081018490526001600160a01b0380841660608301528216608082015260a08082528651908201528551819060208083019160c08401918a019080838360005b838110156200067357818101518382015260200162000659565b50505050905090810190601f168015620006a15780820380516001836020036101000a031916815260200191505b50838103825287518152875160209182019189019080838360005b83811015620006d6578181015183820152602001620006bc565b50505050905090810190601f168015620007045780820380516001836020036101000a031916815260200191505b50975050505050505050604051809103906000f0801580156200072b573d6000803e3d6000fd5b506003805460018101825560009182527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0384811691821790925560025460408051635471e23760e01b815260048101939093525194955090911692635471e2379260248084019391929182900301818387803b158015620007c057600080fd5b505af1158015620007d5573d6000803e3d6000fd5b5050505050505050565b336001600160a01b0382161462000831576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21027b832b930ba34b7b960791b604482015290519081900360640190fd5b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6200088d62000992565b6000546001600160a01b03908116911614620008f0576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620009375760405162461bcd60e51b81526004018080602001828103825260268152602001806200190c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b610f6780620009a58339019056fe60806040523480156200001157600080fd5b5060405162000f6738038062000f67833981810160405260a08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060909201519093509091506000620001c86001600160e01b036200032816565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062000f47833981519152908290a350604080516000815260208082018084528251902088519093899301918291908401908083835b60208310620002485780518252601f19909201916020918201910162000227565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415620002c6576040805162461bcd60e51b815260206004820152600c60248201526b092dcecc2d8d2c840d0c2e6d60a31b604482015290519081900360640190fd5b8451620002db90600190602088019062000434565b508351620002f190600290602087019062000434565b506003839055600580546001600160a01b0319166001600160a01b0383161790556200031d826200032d565b5050505050620004d6565b335b90565b620003406001600160e01b036200032816565b6000546001600160a01b03908116911614620003a3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620003ea5760405162461bcd60e51b815260040180806020018281038252602681526020018062000f216026913960400191505060405180910390fd5b600080546040516001600160a01b038085169392169160008051602062000f4783398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200047757805160ff1916838001178555620004a7565b82800160010185558215620004a7579182015b82811115620004a75782518255916020019190600101906200048a565b50620004b5929150620004b9565b5090565b6200032a91905b80821115620004b55760008155600101620004c0565b610a3b80620004e66000396000f3fe6080604052600436106100865760003560e01c8063715018a611610059578063715018a6146101c85780638da5cb5b146101dd578063a035b1fe1461020e578063d13319c414610235578063f2fde38b1461024a57610086565b806306fdde031461008b5780633bc5de30146101155780633ccfd60b146101a9578063466a9e75146101c0575b600080fd5b34801561009757600080fd5b506100a061027d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100da5781810151838201526020016100c2565b50505050905090810190601f1680156101075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012157600080fd5b5061012a610308565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561016d578181015183820152602001610155565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156101b557600080fd5b506101be6103a6565b005b6101be61043f565b3480156101d457600080fd5b506101be6106f8565b3480156101e957600080fd5b506101f26107ac565b604080516001600160a01b039092168252519081900360200190f35b34801561021a57600080fd5b506102236107bb565b60408051918252519081900360200190f35b34801561024157600080fd5b506100a06107c1565b34801561025657600080fd5b506101be6004803603602081101561026d57600080fd5b50356001600160a01b03166108d1565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b505050505081565b6003546002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815260609460009493909284918301828280156103975780601f1061036c57610100808354040283529160200191610397565b820191906000526020600020905b81548152906001019060200180831161037a57829003601f168201915b50505050509150915091509091565b6103ae6109db565b6000546001600160a01b03908116911614610410576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60405133904780156108fc02916000818181858888f1935050505015801561043c573d6000803e3d6000fd5b50565b600354341015610496576040805162461bcd60e51b815260206004820152601960248201527f506c656173652050617920636f6d706c65746520707269636500000000000000604482015290519081900360640190fd5b6005546040805163543a185d60e11b815233600482015290516000926001600160a01b03169163a87430ba916024808301926020929190829003018186803b1580156104e157600080fd5b505afa1580156104f5573d6000803e3d6000fd5b505050506040513d602081101561050b57600080fd5b50516001600160a01b0316141561055f576040805162461bcd60e51b8152602060048201526013602482015272155cd95c88139bdd08149959da5cdd195c9959606a1b604482015290519081900360640190fd5b3360009081526006602052604090205460ff16156105bb576040805162461bcd60e51b8152602060048201526014602482015273135d5cda58c8185b1c9958591e48189bdd59da1d60621b604482015290519081900360640190fd5b6003543411156105f7576003546040513391340380156108fc02916000818181858888f193505050501580156105f5573d6000803e3d6000fd5b505b33600081815260066020526040808220805460ff19166001179055600554815163c3c5a54760e01b815260048101949094528151929384936001600160a01b03929092169263c3c5a54792602480840193829003018186803b15801561065c57600080fd5b505afa158015610670573d6000803e3d6000fd5b505050506040513d604081101561068657600080fd5b5080516020909101516040805163712dc5af60e11b815230600482015290519194509192506001600160a01b0384169163e25b8b5e91602480830192600092919082900301818387803b1580156106dc57600080fd5b505af11580156106f0573d6000803e3d6000fd5b505050505050565b6107006109db565b6000546001600160a01b03908116911614610762576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60035481565b3360009081526006602052604090205460609060ff16806107fa57506107e56107ac565b6001600160a01b0316336001600160a01b0316145b610842576040805162461bcd60e51b8152602060048201526014602482015273506c656173652042757920746865204d7573696360601b604482015290519081900360640190fd5b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108c75780601f1061089c576101008083540402835291602001916108c7565b820191906000526020600020905b8154815290600101906020018083116108aa57829003601f168201915b5050505050905090565b6108d96109db565b6000546001600160a01b0390811691161461093b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166109805760405162461bcd60e51b81526004018080602001828103825260268152602001806109e06026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220ebfaa55aa3700977924e67350e8c2b33c59da6797a5adaa88f95e090b48737cf64736f6c634300060000334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212205a0fd291af3d852d932366a4559ef8333407d0a71e61258f17df303a5a5f282a64736f6c634300060000334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212203eca576423a994aabaaf9d3150d48ff82c2497e44e3ef68fb0fa9a22072c609564736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806318b8275a1461005c5780635471e2371461011e5780637678922e14610146578063a87430ba1461019e578063c3c5a547146101c4575b600080fd5b6101026004803603602081101561007257600080fd5b81019060208101813564010000000081111561008d57600080fd5b82018360208201111561009f57600080fd5b803590602001918460018302840111640100000000831117156100c157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061020d945050505050565b604080516001600160a01b039092168252519081900360200190f35b6101446004803603602081101561013457600080fd5b50356001600160a01b03166103a3565b005b61014e6103f4565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561018a578181015183820152602001610172565b505050509050019250505060405180910390f35b610102600480360360208110156101b457600080fd5b50356001600160a01b0316610456565b6101ea600480360360208110156101da57600080fd5b50356001600160a01b0316610471565b6040805192151583526001600160a01b0390911660208301528051918290030190f35b600061021833610492565b1561026a576040805162461bcd60e51b815260206004820152601860248201527f436f6e74726163742063616e2774206265206120557365720000000000000000604482015290519081900360640190fd5b336000908152602081905260409020546001600160a01b0316156102cb576040805162461bcd60e51b81526020600482015260136024820152725573657220616c72656164792065786973747360681b604482015290519081900360640190fd5b600082336040516102db9061049e565b6001600160a01b03821660208083019190915260408083528451908301528351829160608301919086019080838360005b8381101561032457818101518382015260200161030c565b50505050905090810190601f1680156103515780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f080158015610373573d6000803e3d6000fd5b5033600090815260208190526040902080546001600160a01b0319166001600160a01b0383161790559392505050565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0392909216919091179055565b6060600180548060200260200160405190810160405280929190818152602001828054801561044c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161042e575b5050505050905090565b6000602081905290815260409020546001600160a01b031681565b6001600160a01b039081166000908152602081905260409020541680151591565b3b63ffffffff16151590565b611cef806104ac8339019056fe60806040523480156200001157600080fd5b5060405162001cef38038062001cef833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b5060405260200151915060009050620001076001600160e01b036200018416565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062001ccf833981519152908290a350600280546001600160a01b0319163317905581516200016790600190602085019062000290565b506200017c816001600160e01b036200018916565b505062000332565b335b90565b6200019c6001600160e01b036200018416565b6000546001600160a01b03908116911614620001ff576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620002465760405162461bcd60e51b815260040180806020018281038252602681526020018062001ca96026913960400191505060405180910390fd5b600080546040516001600160a01b038085169392169160008051602062001ccf83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002d357805160ff191683800117855562000303565b8280016001018555821562000303579182015b8281111562000303578251825591602001919060010190620002e6565b506200031192915062000315565b5090565b6200018691905b808211156200031157600081556001016200031c565b61196780620003426000396000f3fe60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063c45a0155116200006f578063c45a015514620001b5578063c6ab113114620001bf578063cf95aed614620001c9578063e25b8b5e1462000301578063f2fde38b146200032a57620000a0565b806306fdde0314620000a5578063715018a614620001275780638da5cb5b1462000133578063a3dc8ccf1462000159575b600080fd5b620000af62000353565b6040805160208082528351818301528351919283929083019185019080838360005b83811015620000eb578181015183820152602001620000d1565b50505050905090810190601f168015620001195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62000131620003e4565b005b6200013d6200049b565b604080516001600160a01b039092168252519081900360200190f35b62000163620004aa565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015620001a157818101518382015260200162000187565b505050509050019250505060405180910390f35b6200013d6200050e565b620001636200051d565b6200013160048036036060811015620001e157600080fd5b810190602081018135640100000000811115620001fd57600080fd5b8201836020820111156200021057600080fd5b803590602001918460018302840111640100000000831117156200023357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156200028757600080fd5b8201836020820111156200029a57600080fd5b80359060200191846001830284011164010000000083111715620002bd57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506200057f915050565b62000131600480360360208110156200031957600080fd5b50356001600160a01b0316620007df565b62000131600480360360208110156200034257600080fd5b50356001600160a01b031662000883565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015620003dc5780601f10620003b057610100808354040283529160200191620003dc565b820191906000526020600020905b815481529060010190602001808311620003be57829003601f168201915b505050505081565b620003ee62000992565b6000546001600160a01b0390811691161462000451576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b606060048054806020026020016040519081016040528092919081815260200182805480156200050457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620004e5575b5050505050905090565b6002546001600160a01b031681565b6060600380548060200260200160405190810160405280929190818152602001828054801562000504576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620004e5575050505050905090565b6200058962000992565b6000546001600160a01b03908116911614620005ec576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000838383620005fb6200049b565b6002546040516001600160a01b0390911690620006189062000996565b604081018490526001600160a01b0380841660608301528216608082015260a08082528651908201528551819060208083019160c08401918a019080838360005b838110156200067357818101518382015260200162000659565b50505050905090810190601f168015620006a15780820380516001836020036101000a031916815260200191505b50838103825287518152875160209182019189019080838360005b83811015620006d6578181015183820152602001620006bc565b50505050905090810190601f168015620007045780820380516001836020036101000a031916815260200191505b50975050505050505050604051809103906000f0801580156200072b573d6000803e3d6000fd5b506003805460018101825560009182527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0384811691821790925560025460408051635471e23760e01b815260048101939093525194955090911692635471e2379260248084019391929182900301818387803b158015620007c057600080fd5b505af1158015620007d5573d6000803e3d6000fd5b5050505050505050565b336001600160a01b0382161462000831576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21027b832b930ba34b7b960791b604482015290519081900360640190fd5b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6200088d62000992565b6000546001600160a01b03908116911614620008f0576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620009375760405162461bcd60e51b81526004018080602001828103825260268152602001806200190c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b610f6780620009a58339019056fe60806040523480156200001157600080fd5b5060405162000f6738038062000f67833981810160405260a08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060909201519093509091506000620001c86001600160e01b036200032816565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062000f47833981519152908290a350604080516000815260208082018084528251902088519093899301918291908401908083835b60208310620002485780518252601f19909201916020918201910162000227565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415620002c6576040805162461bcd60e51b815260206004820152600c60248201526b092dcecc2d8d2c840d0c2e6d60a31b604482015290519081900360640190fd5b8451620002db90600190602088019062000434565b508351620002f190600290602087019062000434565b506003839055600580546001600160a01b0319166001600160a01b0383161790556200031d826200032d565b5050505050620004d6565b335b90565b620003406001600160e01b036200032816565b6000546001600160a01b03908116911614620003a3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620003ea5760405162461bcd60e51b815260040180806020018281038252602681526020018062000f216026913960400191505060405180910390fd5b600080546040516001600160a01b038085169392169160008051602062000f4783398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200047757805160ff1916838001178555620004a7565b82800160010185558215620004a7579182015b82811115620004a75782518255916020019190600101906200048a565b50620004b5929150620004b9565b5090565b6200032a91905b80821115620004b55760008155600101620004c0565b610a3b80620004e66000396000f3fe6080604052600436106100865760003560e01c8063715018a611610059578063715018a6146101c85780638da5cb5b146101dd578063a035b1fe1461020e578063d13319c414610235578063f2fde38b1461024a57610086565b806306fdde031461008b5780633bc5de30146101155780633ccfd60b146101a9578063466a9e75146101c0575b600080fd5b34801561009757600080fd5b506100a061027d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100da5781810151838201526020016100c2565b50505050905090810190601f1680156101075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012157600080fd5b5061012a610308565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561016d578181015183820152602001610155565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156101b557600080fd5b506101be6103a6565b005b6101be61043f565b3480156101d457600080fd5b506101be6106f8565b3480156101e957600080fd5b506101f26107ac565b604080516001600160a01b039092168252519081900360200190f35b34801561021a57600080fd5b506102236107bb565b60408051918252519081900360200190f35b34801561024157600080fd5b506100a06107c1565b34801561025657600080fd5b506101be6004803603602081101561026d57600080fd5b50356001600160a01b03166108d1565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b505050505081565b6003546002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815260609460009493909284918301828280156103975780601f1061036c57610100808354040283529160200191610397565b820191906000526020600020905b81548152906001019060200180831161037a57829003601f168201915b50505050509150915091509091565b6103ae6109db565b6000546001600160a01b03908116911614610410576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60405133904780156108fc02916000818181858888f1935050505015801561043c573d6000803e3d6000fd5b50565b600354341015610496576040805162461bcd60e51b815260206004820152601960248201527f506c656173652050617920636f6d706c65746520707269636500000000000000604482015290519081900360640190fd5b6005546040805163543a185d60e11b815233600482015290516000926001600160a01b03169163a87430ba916024808301926020929190829003018186803b1580156104e157600080fd5b505afa1580156104f5573d6000803e3d6000fd5b505050506040513d602081101561050b57600080fd5b50516001600160a01b0316141561055f576040805162461bcd60e51b8152602060048201526013602482015272155cd95c88139bdd08149959da5cdd195c9959606a1b604482015290519081900360640190fd5b3360009081526006602052604090205460ff16156105bb576040805162461bcd60e51b8152602060048201526014602482015273135d5cda58c8185b1c9958591e48189bdd59da1d60621b604482015290519081900360640190fd5b6003543411156105f7576003546040513391340380156108fc02916000818181858888f193505050501580156105f5573d6000803e3d6000fd5b505b33600081815260066020526040808220805460ff19166001179055600554815163c3c5a54760e01b815260048101949094528151929384936001600160a01b03929092169263c3c5a54792602480840193829003018186803b15801561065c57600080fd5b505afa158015610670573d6000803e3d6000fd5b505050506040513d604081101561068657600080fd5b5080516020909101516040805163712dc5af60e11b815230600482015290519194509192506001600160a01b0384169163e25b8b5e91602480830192600092919082900301818387803b1580156106dc57600080fd5b505af11580156106f0573d6000803e3d6000fd5b505050505050565b6107006109db565b6000546001600160a01b03908116911614610762576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60035481565b3360009081526006602052604090205460609060ff16806107fa57506107e56107ac565b6001600160a01b0316336001600160a01b0316145b610842576040805162461bcd60e51b8152602060048201526014602482015273506c656173652042757920746865204d7573696360601b604482015290519081900360640190fd5b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108c75780601f1061089c576101008083540402835291602001916108c7565b820191906000526020600020905b8154815290600101906020018083116108aa57829003601f168201915b5050505050905090565b6108d96109db565b6000546001600160a01b0390811691161461093b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166109805760405162461bcd60e51b81526004018080602001828103825260268152602001806109e06026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220ebfaa55aa3700977924e67350e8c2b33c59da6797a5adaa88f95e090b48737cf64736f6c634300060000334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212205a0fd291af3d852d932366a4559ef8333407d0a71e61258f17df303a5a5f282a64736f6c634300060000334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212203eca576423a994aabaaf9d3150d48ff82c2497e44e3ef68fb0fa9a22072c609564736f6c63430006000033",
  "sourceMap": "95:1106:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;95:1106:0;;;;;;;",
  "deployedSourceMap": "95:1106:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;95:1106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;577:392;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;577:392:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;577:392:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;577:392:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;577:392:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;577:392:0;;-1:-1:-1;577:392:0;;-1:-1:-1;;;;;577:392:0:i;:::-;;;;-1:-1:-1;;;;;577:392:0;;;;;;;;;;;;;;979:113;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;979:113:0;-1:-1:-1;;;;;979:113:0;;:::i;:::-;;1098:101;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1098:101:0;;;;;;;;;;;;;;;;;122:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;122:46:0;-1:-1:-1;;;;;122:46:0;;:::i;404:162::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;404:162:0;-1:-1:-1;;;;;404:162:0;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;404:162:0;;;;;;;;;;;;;;;;577:392;630:12;662:22;673:10;662;:22::i;:::-;661:23;653:60;;;;;-1:-1:-1;;;653:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;737:10;773:1;731:17;;;;;;;;;;;-1:-1:-1;;;;;731:17:0;:45;723:77;;;;;-1:-1:-1;;;723:77:0;;;;;;;;;;;;-1:-1:-1;;;723:77:0;;;;;;;;;;;;;;;819:25;864:5;871:10;847:35;;;;;:::i;:::-;-1:-1:-1;;;;;847:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;847:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;907:10:0;901:5;:17;;;;;;;;;;:32;;-1:-1:-1;;;;;;901:32:0;-1:-1:-1;;;;;901:32:0;;;;;;577:392;-1:-1:-1;;;577:392:0:o;979:113::-;1052:12;27:10:-1;;23:18;;;45:23;;-1:-1;1052:33:0;;;;;;;;-1:-1:-1;;;;;;1052:33:0;-1:-1:-1;;;;;1052:33:0;;;;;;;;;;979:113::o;1098:101::-;1140:22;1180:12;1173:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1173:19:0;;;;;;;;;;;;;;;;;;;;;;;1098:101;:::o;122:46::-;;;;;;;;;;;;;-1:-1:-1;;;;;122:46:0;;:::o;404:162::-;-1:-1:-1;;;;;510:15:0;;;464:4;510:15;;;;;;;;;;;;502:38;;;;404:162::o;213:185::-;337:18;382:8;;;;;213:185::o;95:1106::-;;;;;;;;:::o",
  "source": "pragma solidity >= 0.4.0 < 0.7.0;\n\nimport \"./UserContract.sol\";\nimport \"./MusicContract.sol\";\n\ncontract Factory{\n    \n    mapping (address => UserContract) public users;\n    MusicContract[] musicLibrary;\n    \n    function isContract(address _addr) private view returns (bool){\n        uint32 size;\n        assembly {\n            size := extcodesize(_addr)\n        }\n        return (size > 0);\n    }\n\n    function isRegistered(address _address) public view returns(bool, UserContract){\n        return ((address(users[_address]) != address(0)), users[_address]);\n    }\n\n    \n    function addUser(string memory _name) public returns(UserContract){\n        require(!isContract(msg.sender), \"Contract can't be a User\");\n        require(users[msg.sender] == UserContract(address(0)), \"User already exists\");\n        \n        UserContract userContract = new UserContract(_name, msg.sender);\n        \n        users[msg.sender] = userContract;\n        return userContract;\n    }\n    \n    function addMusicToLibrary(MusicContract _musicContract) public{\n        musicLibrary.push(_musicContract);\n    }\n\n    function getLibrary() public view returns(MusicContract[] memory){\n        return musicLibrary;\n    }\n}",
  "sourcePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol",
  "ast": {
    "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol",
    "exportedSymbols": {
      "Factory": [
        126
      ]
    },
    "id": 127,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/UserContract.sol",
        "file": "./UserContract.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 127,
        "sourceUnit": 511,
        "src": "35:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/MusicContract.sol",
        "file": "./MusicContract.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 127,
        "sourceUnit": 374,
        "src": "64:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          510
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 126,
        "linearizedBaseContracts": [
          126
        ],
        "name": "Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a87430ba",
            "id": 7,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 126,
            "src": "122:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$510_$",
              "typeString": "mapping(address => contract UserContract)"
            },
            "typeName": {
              "id": 6,
              "keyType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "131:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "122:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$510_$",
                "typeString": "mapping(address => contract UserContract)"
              },
              "valueType": {
                "contractScope": null,
                "id": 5,
                "name": "UserContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 510,
                "src": "142:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_UserContract_$510",
                  "typeString": "contract UserContract"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "musicLibrary",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 126,
            "src": "174:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_MusicContract_$373_$dyn_storage",
              "typeString": "contract MusicContract[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 8,
                "name": "MusicContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 373,
                "src": "174:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MusicContract_$373",
                  "typeString": "contract MusicContract"
                }
              },
              "id": 9,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "174:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_MusicContract_$373_$dyn_storage_ptr",
                "typeString": "contract MusicContract[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "275:123:0",
              "statements": [
                {
                  "assignments": [
                    18
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 26,
                      "src": "285:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 17,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "285:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "285:11:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "315:50:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "329:26:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "_addr",
                              "nodeType": "YulIdentifier",
                              "src": "349:5:0"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "337:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "337:18:0"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "329:4:0"
                          }
                        ]
                      }
                    ]
                  },
                  "externalReferences": [
                    {
                      "declaration": 12,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "349:5:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 18,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "329:4:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 20,
                  "nodeType": "InlineAssembly",
                  "src": "306:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 21,
                          "name": "size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "382:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "389:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "382:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 24,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "381:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16,
                  "id": 25,
                  "nodeType": "Return",
                  "src": "374:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27,
                  "src": "233:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "233:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "232:15:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27,
                  "src": "270:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "269:6:0"
            },
            "scope": 126,
            "src": "213:185:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "483:83:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 46,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 38,
                                    "name": "users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7,
                                    "src": "510:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$510_$",
                                      "typeString": "mapping(address => contract UserContract)"
                                    }
                                  },
                                  "id": 40,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 39,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29,
                                    "src": "516:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "510:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UserContract_$510",
                                    "typeString": "contract UserContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UserContract_$510",
                                    "typeString": "contract UserContract"
                                  }
                                ],
                                "id": 37,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "502:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 36,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "502:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "502:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 44,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "538:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 43,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "530:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 42,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "530:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 45,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "530:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "502:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 47,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "501:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "543:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$510_$",
                            "typeString": "mapping(address => contract UserContract)"
                          }
                        },
                        "id": 50,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 49,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "549:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "543:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$510",
                          "typeString": "contract UserContract"
                        }
                      }
                    ],
                    "id": 51,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "500:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_contract$_UserContract_$510_$",
                      "typeString": "tuple(bool,contract UserContract)"
                    }
                  },
                  "functionReturnParameters": 35,
                  "id": 52,
                  "nodeType": "Return",
                  "src": "493:66:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c3c5a547",
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 54,
                  "src": "426:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "425:18:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 54,
                  "src": "464:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 54,
                  "src": "470:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserContract_$510",
                    "typeString": "contract UserContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 33,
                    "name": "UserContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 510,
                    "src": "470:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$510",
                      "typeString": "contract UserContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "463:20:0"
            },
            "scope": 126,
            "src": "404:162:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "643:326:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "661:23:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 63,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 838,
                                "src": "673:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 64,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "673:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 62,
                            "name": "isContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "662:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "662:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742063616e277420626520612055736572",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "686:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9916cfcfd2248c72bb9993ee4475e078d4589079b89c0747877491f683600a3e",
                          "typeString": "literal_string \"Contract can't be a User\""
                        },
                        "value": "Contract can't be a User"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9916cfcfd2248c72bb9993ee4475e078d4589079b89c0747877491f683600a3e",
                          "typeString": "literal_string \"Contract can't be a User\""
                        }
                      ],
                      "id": 61,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        841,
                        842
                      ],
                      "referencedDeclaration": 842,
                      "src": "653:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "653:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "653:60:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_UserContract_$510",
                          "typeString": "contract UserContract"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 71,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "731:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$510_$",
                              "typeString": "mapping(address => contract UserContract)"
                            }
                          },
                          "id": 74,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 72,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 838,
                              "src": "737:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "737:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "731:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserContract_$510",
                            "typeString": "contract UserContract"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 78,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "773:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 77,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "765:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 76,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "765:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "765:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 75,
                            "name": "UserContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "752:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_UserContract_$510_$",
                              "typeString": "type(contract UserContract)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "752:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserContract_$510",
                            "typeString": "contract UserContract"
                          }
                        },
                        "src": "731:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5573657220616c726561647920657869737473",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "778:21:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72a6a651fb4cd9ff87b3ff041092e509401f47f92bb4122586fcb66064d104bd",
                          "typeString": "literal_string \"User already exists\""
                        },
                        "value": "User already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72a6a651fb4cd9ff87b3ff041092e509401f47f92bb4122586fcb66064d104bd",
                          "typeString": "literal_string \"User already exists\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        841,
                        842
                      ],
                      "referencedDeclaration": 842,
                      "src": "723:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "723:77:0"
                },
                {
                  "assignments": [
                    86
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86,
                      "name": "userContract",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 103,
                      "src": "819:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$510",
                        "typeString": "contract UserContract"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 85,
                        "name": "UserContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 510,
                        "src": "819:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$510",
                          "typeString": "contract UserContract"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 93,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "864:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 838,
                          "src": "871:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "871:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "847:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_UserContract_$510_$",
                        "typeString": "function (string memory,address) returns (contract UserContract)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 87,
                        "name": "UserContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 510,
                        "src": "851:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$510",
                          "typeString": "contract UserContract"
                        }
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "847:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$510",
                      "typeString": "contract UserContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "819:63:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "901:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$510_$",
                          "typeString": "mapping(address => contract UserContract)"
                        }
                      },
                      "id": 97,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 838,
                          "src": "907:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "907:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "901:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$510",
                        "typeString": "contract UserContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "userContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "921:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$510",
                        "typeString": "contract UserContract"
                      }
                    },
                    "src": "901:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$510",
                      "typeString": "contract UserContract"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "901:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 101,
                    "name": "userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86,
                    "src": "950:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$510",
                      "typeString": "contract UserContract"
                    }
                  },
                  "functionReturnParameters": 60,
                  "id": 102,
                  "nodeType": "Return",
                  "src": "943:19:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "18b8275a",
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addUser",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 104,
                  "src": "594:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "593:21:0"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 104,
                  "src": "630:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserContract_$510",
                    "typeString": "contract UserContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 58,
                    "name": "UserContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 510,
                    "src": "630:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$510",
                      "typeString": "contract UserContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "629:14:0"
            },
            "scope": 126,
            "src": "577:392:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1042:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "_musicContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1070:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$373",
                          "typeString": "contract MusicContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MusicContract_$373",
                          "typeString": "contract MusicContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "musicLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1052:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_MusicContract_$373_$dyn_storage",
                          "typeString": "contract MusicContract[] storage ref"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1052:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_MusicContract_$373_$returns$__$",
                        "typeString": "function (contract MusicContract)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1052:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1052:33:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5471e237",
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMusicToLibrary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "name": "_musicContract",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 116,
                  "src": "1006:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MusicContract_$373",
                    "typeString": "contract MusicContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 105,
                    "name": "MusicContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 373,
                    "src": "1006:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MusicContract_$373",
                      "typeString": "contract MusicContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:30:0"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1042:0:0"
            },
            "scope": 126,
            "src": "979:113:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "1163:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 122,
                    "name": "musicLibrary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "1180:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$373_$dyn_storage",
                      "typeString": "contract MusicContract[] storage ref"
                    }
                  },
                  "functionReturnParameters": 121,
                  "id": 123,
                  "nodeType": "Return",
                  "src": "1173:19:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7678922e",
            "id": 125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLibrary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:2:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 125,
                  "src": "1140:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_MusicContract_$373_$dyn_memory_ptr",
                    "typeString": "contract MusicContract[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 118,
                      "name": "MusicContract",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 373,
                      "src": "1140:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MusicContract_$373",
                        "typeString": "contract MusicContract"
                      }
                    },
                    "id": 119,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1140:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$373_$dyn_storage_ptr",
                      "typeString": "contract MusicContract[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1139:24:0"
            },
            "scope": 126,
            "src": "1098:101:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 127,
        "src": "95:1106:0"
      }
    ],
    "src": "0:1201:0"
  },
  "legacyAST": {
    "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol",
    "exportedSymbols": {
      "Factory": [
        126
      ]
    },
    "id": 127,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/UserContract.sol",
        "file": "./UserContract.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 127,
        "sourceUnit": 511,
        "src": "35:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/MusicContract.sol",
        "file": "./MusicContract.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 127,
        "sourceUnit": 374,
        "src": "64:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          510
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 126,
        "linearizedBaseContracts": [
          126
        ],
        "name": "Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a87430ba",
            "id": 7,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 126,
            "src": "122:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$510_$",
              "typeString": "mapping(address => contract UserContract)"
            },
            "typeName": {
              "id": 6,
              "keyType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "131:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "122:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$510_$",
                "typeString": "mapping(address => contract UserContract)"
              },
              "valueType": {
                "contractScope": null,
                "id": 5,
                "name": "UserContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 510,
                "src": "142:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_UserContract_$510",
                  "typeString": "contract UserContract"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "musicLibrary",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 126,
            "src": "174:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_MusicContract_$373_$dyn_storage",
              "typeString": "contract MusicContract[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 8,
                "name": "MusicContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 373,
                "src": "174:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MusicContract_$373",
                  "typeString": "contract MusicContract"
                }
              },
              "id": 9,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "174:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_MusicContract_$373_$dyn_storage_ptr",
                "typeString": "contract MusicContract[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "275:123:0",
              "statements": [
                {
                  "assignments": [
                    18
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 26,
                      "src": "285:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 17,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "285:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "285:11:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "315:50:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "329:26:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "_addr",
                              "nodeType": "YulIdentifier",
                              "src": "349:5:0"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "337:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "337:18:0"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "329:4:0"
                          }
                        ]
                      }
                    ]
                  },
                  "externalReferences": [
                    {
                      "declaration": 12,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "349:5:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 18,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "329:4:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 20,
                  "nodeType": "InlineAssembly",
                  "src": "306:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 21,
                          "name": "size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "382:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "389:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "382:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 24,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "381:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16,
                  "id": 25,
                  "nodeType": "Return",
                  "src": "374:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27,
                  "src": "233:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "233:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "232:15:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27,
                  "src": "270:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "269:6:0"
            },
            "scope": 126,
            "src": "213:185:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "483:83:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 46,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 38,
                                    "name": "users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7,
                                    "src": "510:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$510_$",
                                      "typeString": "mapping(address => contract UserContract)"
                                    }
                                  },
                                  "id": 40,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 39,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29,
                                    "src": "516:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "510:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UserContract_$510",
                                    "typeString": "contract UserContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UserContract_$510",
                                    "typeString": "contract UserContract"
                                  }
                                ],
                                "id": 37,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "502:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 36,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "502:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "502:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 44,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "538:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 43,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "530:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 42,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "530:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 45,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "530:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "502:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 47,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "501:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "543:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$510_$",
                            "typeString": "mapping(address => contract UserContract)"
                          }
                        },
                        "id": 50,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 49,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "549:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "543:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$510",
                          "typeString": "contract UserContract"
                        }
                      }
                    ],
                    "id": 51,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "500:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_contract$_UserContract_$510_$",
                      "typeString": "tuple(bool,contract UserContract)"
                    }
                  },
                  "functionReturnParameters": 35,
                  "id": 52,
                  "nodeType": "Return",
                  "src": "493:66:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c3c5a547",
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 54,
                  "src": "426:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "425:18:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 54,
                  "src": "464:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 54,
                  "src": "470:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserContract_$510",
                    "typeString": "contract UserContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 33,
                    "name": "UserContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 510,
                    "src": "470:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$510",
                      "typeString": "contract UserContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "463:20:0"
            },
            "scope": 126,
            "src": "404:162:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "643:326:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "661:23:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 63,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 838,
                                "src": "673:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 64,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "673:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 62,
                            "name": "isContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "662:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "662:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742063616e277420626520612055736572",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "686:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9916cfcfd2248c72bb9993ee4475e078d4589079b89c0747877491f683600a3e",
                          "typeString": "literal_string \"Contract can't be a User\""
                        },
                        "value": "Contract can't be a User"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9916cfcfd2248c72bb9993ee4475e078d4589079b89c0747877491f683600a3e",
                          "typeString": "literal_string \"Contract can't be a User\""
                        }
                      ],
                      "id": 61,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        841,
                        842
                      ],
                      "referencedDeclaration": 842,
                      "src": "653:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "653:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "653:60:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_UserContract_$510",
                          "typeString": "contract UserContract"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 71,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "731:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$510_$",
                              "typeString": "mapping(address => contract UserContract)"
                            }
                          },
                          "id": 74,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 72,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 838,
                              "src": "737:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "737:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "731:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserContract_$510",
                            "typeString": "contract UserContract"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 78,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "773:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 77,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "765:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 76,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "765:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "765:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 75,
                            "name": "UserContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "752:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_UserContract_$510_$",
                              "typeString": "type(contract UserContract)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "752:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserContract_$510",
                            "typeString": "contract UserContract"
                          }
                        },
                        "src": "731:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5573657220616c726561647920657869737473",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "778:21:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72a6a651fb4cd9ff87b3ff041092e509401f47f92bb4122586fcb66064d104bd",
                          "typeString": "literal_string \"User already exists\""
                        },
                        "value": "User already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72a6a651fb4cd9ff87b3ff041092e509401f47f92bb4122586fcb66064d104bd",
                          "typeString": "literal_string \"User already exists\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        841,
                        842
                      ],
                      "referencedDeclaration": 842,
                      "src": "723:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "723:77:0"
                },
                {
                  "assignments": [
                    86
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86,
                      "name": "userContract",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 103,
                      "src": "819:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$510",
                        "typeString": "contract UserContract"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 85,
                        "name": "UserContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 510,
                        "src": "819:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$510",
                          "typeString": "contract UserContract"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 93,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "864:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 838,
                          "src": "871:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "871:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "847:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_UserContract_$510_$",
                        "typeString": "function (string memory,address) returns (contract UserContract)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 87,
                        "name": "UserContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 510,
                        "src": "851:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$510",
                          "typeString": "contract UserContract"
                        }
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "847:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$510",
                      "typeString": "contract UserContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "819:63:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "901:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_UserContract_$510_$",
                          "typeString": "mapping(address => contract UserContract)"
                        }
                      },
                      "id": 97,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 838,
                          "src": "907:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "907:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "901:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$510",
                        "typeString": "contract UserContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "userContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "921:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$510",
                        "typeString": "contract UserContract"
                      }
                    },
                    "src": "901:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$510",
                      "typeString": "contract UserContract"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "901:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 101,
                    "name": "userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86,
                    "src": "950:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$510",
                      "typeString": "contract UserContract"
                    }
                  },
                  "functionReturnParameters": 60,
                  "id": 102,
                  "nodeType": "Return",
                  "src": "943:19:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "18b8275a",
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addUser",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 104,
                  "src": "594:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "593:21:0"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 104,
                  "src": "630:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserContract_$510",
                    "typeString": "contract UserContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 58,
                    "name": "UserContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 510,
                    "src": "630:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$510",
                      "typeString": "contract UserContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "629:14:0"
            },
            "scope": 126,
            "src": "577:392:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1042:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "_musicContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1070:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$373",
                          "typeString": "contract MusicContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MusicContract_$373",
                          "typeString": "contract MusicContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "musicLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1052:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_MusicContract_$373_$dyn_storage",
                          "typeString": "contract MusicContract[] storage ref"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1052:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_MusicContract_$373_$returns$__$",
                        "typeString": "function (contract MusicContract)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1052:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1052:33:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5471e237",
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMusicToLibrary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "name": "_musicContract",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 116,
                  "src": "1006:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MusicContract_$373",
                    "typeString": "contract MusicContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 105,
                    "name": "MusicContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 373,
                    "src": "1006:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MusicContract_$373",
                      "typeString": "contract MusicContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:30:0"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1042:0:0"
            },
            "scope": 126,
            "src": "979:113:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "1163:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 122,
                    "name": "musicLibrary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "1180:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$373_$dyn_storage",
                      "typeString": "contract MusicContract[] storage ref"
                    }
                  },
                  "functionReturnParameters": 121,
                  "id": 123,
                  "nodeType": "Return",
                  "src": "1173:19:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7678922e",
            "id": 125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLibrary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:2:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 125,
                  "src": "1140:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_MusicContract_$373_$dyn_memory_ptr",
                    "typeString": "contract MusicContract[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 118,
                      "name": "MusicContract",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 373,
                      "src": "1140:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MusicContract_$373",
                        "typeString": "contract MusicContract"
                      }
                    },
                    "id": 119,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1140:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$373_$dyn_storage_ptr",
                      "typeString": "contract MusicContract[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1139:24:0"
            },
            "scope": 126,
            "src": "1098:101:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 127,
        "src": "95:1106:0"
      }
    ],
    "src": "0:1201:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xA552cB52A7EcC9A786f58a7D0FCF1493a3936E42",
      "transactionHash": "0x3c1506d7f549dace81f4e652c2dfd496454014eb5704e320bbf9fba66fd999ca"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-30T14:38:12.144Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}