{
  "contractName": "UserContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyMusic",
      "outputs": [
        {
          "internalType": "contract MusicContract[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnedMusic",
      "outputs": [
        {
          "internalType": "contract MusicContract[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "addMusic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract MusicContract",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "updateOwnedMusic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addMusic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyMusic\",\"outputs\":[{\"internalType\":\"contract MusicContract[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnedMusic\",\"outputs\":[{\"internalType\":\"contract MusicContract[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract MusicContract\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"updateOwnedMusic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Samarth Bhadane\",\"methods\":{\"addMusic(string,string,uint256)\":{\"details\":\"only Owner must call this function.\"},\"constructor\":{\"params\":{\"_name\":\"of user.\",\"_owner\":\"address of owner of Contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"UserContract\"},\"userdoc\":{\"methods\":{\"addMusic(string,string,uint256)\":{\"notice\":\"The following function is used by owner to add music i.e deploy new music contract.\"},\"constructor\":\"constructor for UserContract.\",\"getMyMusic()\":{\"notice\":\"The following function is used to get music added by user.\"},\"getOwnedMusic()\":{\"notice\":\"The following function is used to get music owned by user.\"}},\"notice\":\"UserContract contains user data, his name, songs added by user and songs which the user bought.\"}},\"settings\":{\"compilationTarget\":{\"/home/samarth/Blockchain/Dapps/music-stream/contracts/UserContract.sol\":\"UserContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol\":{\"keccak256\":\"0x312147056205e67779bdcd0d097ff006b2930dd860f4e634d4434e79764e19a5\",\"urls\":[\"bzz-raw://2a8e12a50ddef73cafbbe4ea6c15cc88ccce29c0eec484747abbd12884accedc\",\"dweb:/ipfs/QmQVYzms3DBGzHQpCqiXATD1bNjYfACvsYick6G5bfR1Fc\"]},\"/home/samarth/Blockchain/Dapps/music-stream/contracts/MusicContract.sol\":{\"keccak256\":\"0xb4b7169bb5dcbc48b2ae54c7f4feca560074d3fd7a16747bcfa31baa3d52bb35\",\"urls\":[\"bzz-raw://2c65a2441a02a7ef8bb2d546c45505950af32bcdb2db8a9ba221479ef59253b7\",\"dweb:/ipfs/QmQRSk81GMVxg4XxY1od4JmJZN2KW6SqJHcS8AXtXWzpUf\"]},\"/home/samarth/Blockchain/Dapps/music-stream/contracts/UserContract.sol\":{\"keccak256\":\"0xf2a6687c5e8e4aab02ad2c3b17c1dcb9aaa3702eda86a29a8847d9afe1f80cea\",\"urls\":[\"bzz-raw://e40a934a65b094b1375b796dc4d0c58d9c7b2df44cf9625c39af0cec27ad07a3\",\"dweb:/ipfs/QmYeXAKZNTqeRKZqqQfJUpecVdPXCbbnae354TeJ2Anqp4\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063c45a0155116200006f578063c45a015514620001b5578063c6ab113114620001bf578063cf95aed614620001c9578063e25b8b5e1462000301578063f2fde38b146200032a57620000a0565b806306fdde0314620000a5578063715018a614620001275780638da5cb5b1462000133578063a3dc8ccf1462000159575b600080fd5b620000af62000353565b6040805160208082528351818301528351919283929083019185019080838360005b83811015620000eb578181015183820152602001620000d1565b50505050905090810190601f168015620001195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62000131620003e4565b005b6200013d6200049b565b604080516001600160a01b039092168252519081900360200190f35b62000163620004aa565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015620001a157818101518382015260200162000187565b505050509050019250505060405180910390f35b6200013d6200050e565b620001636200051d565b6200013160048036036060811015620001e157600080fd5b810190602081018135640100000000811115620001fd57600080fd5b8201836020820111156200021057600080fd5b803590602001918460018302840111640100000000831117156200023357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156200028757600080fd5b8201836020820111156200029a57600080fd5b80359060200191846001830284011164010000000083111715620002bd57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506200057f915050565b62000131600480360360208110156200031957600080fd5b50356001600160a01b0316620007df565b62000131600480360360208110156200034257600080fd5b50356001600160a01b031662000883565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015620003dc5780601f10620003b057610100808354040283529160200191620003dc565b820191906000526020600020905b815481529060010190602001808311620003be57829003601f168201915b505050505081565b620003ee62000992565b6000546001600160a01b0390811691161462000451576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b606060048054806020026020016040519081016040528092919081815260200182805480156200050457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620004e5575b5050505050905090565b6002546001600160a01b031681565b6060600380548060200260200160405190810160405280929190818152602001828054801562000504576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620004e5575050505050905090565b6200058962000992565b6000546001600160a01b03908116911614620005ec576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000838383620005fb6200049b565b6002546040516001600160a01b0390911690620006189062000996565b604081018490526001600160a01b0380841660608301528216608082015260a08082528651908201528551819060208083019160c08401918a019080838360005b838110156200067357818101518382015260200162000659565b50505050905090810190601f168015620006a15780820380516001836020036101000a031916815260200191505b50838103825287518152875160209182019189019080838360005b83811015620006d6578181015183820152602001620006bc565b50505050905090810190601f168015620007045780820380516001836020036101000a031916815260200191505b50975050505050505050604051809103906000f0801580156200072b573d6000803e3d6000fd5b506003805460018101825560009182527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0384811691821790925560025460408051635471e23760e01b815260048101939093525194955090911692635471e2379260248084019391929182900301818387803b158015620007c057600080fd5b505af1158015620007d5573d6000803e3d6000fd5b5050505050505050565b336001600160a01b0382161462000831576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21027b832b930ba34b7b960791b604482015290519081900360640190fd5b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6200088d62000992565b6000546001600160a01b03908116911614620008f0576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620009375760405162461bcd60e51b815260040180806020018281038252602681526020018062001a956026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6110f080620009a58339019056fe60806040523480156200001157600080fd5b50604051620010f0380380620010f0833981810160405260a08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060909201519093509091506000620001c86001600160e01b036200048416565b600080546001600160a01b0319166001600160a01b038316908117825560405192935091600080516020620010a3833981519152908290a350604080516000815260208082018084528251902088519093899301918291908401908083835b60208310620002485780518252601f19909201916020918201910162000227565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415620002c6576040805162461bcd60e51b815260206004820152600c60248201526b092dcecc2d8d2c840d0c2e6d60a31b604482015290519081900360640190fd5b336001600160a01b0316816001600160a01b031663a87430ba336001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200031957600080fd5b505afa1580156200032e573d6000803e3d6000fd5b505050506040513d60208110156200034557600080fd5b5051604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152516024808301926020929190829003018186803b1580156200038d57600080fd5b505afa158015620003a2573d6000803e3d6000fd5b505050506040513d6020811015620003b957600080fd5b50516001600160a01b031614620004025760405162461bcd60e51b815260040180806020018281038252602d815260200180620010c3602d913960400191505060405180910390fd5b84516200041790600190602088019062000590565b5083516200042d90600290602087019062000590565b506003839055600580546001600160a01b0319166001600160a01b038381169190911790915582166000908152600660205260409020805460ff19166001179055620004798262000489565b505050505062000632565b335b90565b6200049c6001600160e01b036200048416565b6000546001600160a01b03908116911614620004ff576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620005465760405162461bcd60e51b81526004018080602001828103825260268152602001806200107d6026913960400191505060405180910390fd5b600080546040516001600160a01b0380851693921691600080516020620010a383398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005d357805160ff191683800117855562000603565b8280016001018555821562000603579182015b8281111562000603578251825591602001919060010190620005e6565b506200061192915062000615565b5090565b6200048691905b808211156200061157600081556001016200061c565b610a3b80620006426000396000f3fe6080604052600436106100865760003560e01c8063715018a611610059578063715018a6146101c85780638da5cb5b146101dd578063a035b1fe1461020e578063d13319c414610235578063f2fde38b1461024a57610086565b806306fdde031461008b5780633bc5de30146101155780633ccfd60b146101a9578063466a9e75146101c0575b600080fd5b34801561009757600080fd5b506100a061027d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100da5781810151838201526020016100c2565b50505050905090810190601f1680156101075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012157600080fd5b5061012a610308565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561016d578181015183820152602001610155565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156101b557600080fd5b506101be6103a6565b005b6101be61043f565b3480156101d457600080fd5b506101be6106f8565b3480156101e957600080fd5b506101f26107ac565b604080516001600160a01b039092168252519081900360200190f35b34801561021a57600080fd5b506102236107bb565b60408051918252519081900360200190f35b34801561024157600080fd5b506100a06107c1565b34801561025657600080fd5b506101be6004803603602081101561026d57600080fd5b50356001600160a01b03166108d1565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b505050505081565b6003546002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815260609460009493909284918301828280156103975780601f1061036c57610100808354040283529160200191610397565b820191906000526020600020905b81548152906001019060200180831161037a57829003601f168201915b50505050509150915091509091565b6103ae6109db565b6000546001600160a01b03908116911614610410576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60405133904780156108fc02916000818181858888f1935050505015801561043c573d6000803e3d6000fd5b50565b600354341015610496576040805162461bcd60e51b815260206004820152601960248201527f506c656173652050617920636f6d706c65746520707269636500000000000000604482015290519081900360640190fd5b6005546040805163543a185d60e11b815233600482015290516000926001600160a01b03169163a87430ba916024808301926020929190829003018186803b1580156104e157600080fd5b505afa1580156104f5573d6000803e3d6000fd5b505050506040513d602081101561050b57600080fd5b50516001600160a01b0316141561055f576040805162461bcd60e51b8152602060048201526013602482015272155cd95c88139bdd08149959da5cdd195c9959606a1b604482015290519081900360640190fd5b3360009081526006602052604090205460ff16156105bb576040805162461bcd60e51b8152602060048201526014602482015273135d5cda58c8185b1c9958591e48189bdd59da1d60621b604482015290519081900360640190fd5b6003543411156105f7576003546040513391340380156108fc02916000818181858888f193505050501580156105f5573d6000803e3d6000fd5b505b33600081815260066020526040808220805460ff19166001179055600554815163c3c5a54760e01b815260048101949094528151929384936001600160a01b03929092169263c3c5a54792602480840193829003018186803b15801561065c57600080fd5b505afa158015610670573d6000803e3d6000fd5b505050506040513d604081101561068657600080fd5b5080516020909101516040805163712dc5af60e11b815230600482015290519194509192506001600160a01b0384169163e25b8b5e91602480830192600092919082900301818387803b1580156106dc57600080fd5b505af11580156106f0573d6000803e3d6000fd5b505050505050565b6107006109db565b6000546001600160a01b03908116911614610762576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60035481565b3360009081526006602052604090205460609060ff16806107fa57506107e56107ac565b6001600160a01b0316336001600160a01b0316145b610842576040805162461bcd60e51b8152602060048201526014602482015273506c656173652042757920746865204d7573696360601b604482015290519081900360640190fd5b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108c75780601f1061089c576101008083540402835291602001916108c7565b820191906000526020600020905b8154815290600101906020018083116108aa57829003601f168201915b5050505050905090565b6108d96109db565b6000546001600160a01b0390811691161461093b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166109805760405162461bcd60e51b81526004018080602001828103825260268152602001806109e06026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122072aec3206e73d9797f83d19cf1524f2464f4a56e4a992c6327f31495db316cbc64736f6c634300060000334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04f6e6c7920526567697374657265642075736572732063616e20696e766f6b65207468652066756e6374696f6e4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212204712965a9964f5e557775ce6613e53ea8d34e705b8c981cb066c4097e5307d8f64736f6c63430006000033",
  "sourceMap": "360:1549:4:-:0;;;696:167;8:9:-1;5:2;;;30:1;27;20:12;5:2;696:167:4;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;696:167:4;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;696:167:4;;420:4:-1;411:14;;;;696:167:4;;;;;411:14:-1;696:167:4;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;696:167:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;696:167:4;;;;;;-1:-1:-1;865:17:6;;-1:-1:-1;885:12:6;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:6;-1:-1:-1;;;;;907:18:6;;;;;;;940:43;;-1:-1:-1;;907:18:6;;-1:-1:-1;907:18:6;;:6;;-1:-1:-1;;907:6:6;-1:-1:-1;;;;;940:43:6;907:6;;940:43;-1:-1:-1;770:7:4;:29;;-1:-1:-1;;;;;;770:29:4;788:10;770:29;;;809:12;;;;-1:-1:-1;;809:12:4;;;;;:::i;:::-;-1:-1:-1;831:25:4;849:6;831:17;:25::i;:::-;696:167;;360:1549;;590:104:5;677:10;590:104;;:::o;1983:240:6:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:6;;;:6;;:22;1262:67;;;;;-1:-1:-1;;;1262:67:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:6;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;;;2151:38:6;;::::1;::::0;2172:6;::::1;::::0;;;;-1:-1:-1;;2172:6:6;-1:-1:-1;;;;;2151:38:6;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:6::1;-1:-1:-1::0;;;;;2199:17:6;;;::::1;::::0;;;::::1;::::0;;1983:240::o;360:1549:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;360:1549:4;;;-1:-1:-1;360:1549:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "360:1549:4:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:1549:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;437:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;437:18:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:145:6;;;:::i;:::-;;1066:77;;;:::i;:::-;;;;-1:-1:-1;;;;;1066:77:6;;;;;;;;;;;;;;1159:102:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1159:102:4;;;;;;;;;;;;;;;;;461:22;;;:::i;963:96::-;;;:::i;1434:289::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1434:289:4;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1434:289:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1434:289:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1434:289:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1434:289:4;;;;;;;;-1:-1:-1;1434:289:4;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;1434:289:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1434:289:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1434:289:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1434:289:4;;-1:-1:-1;;1434:289:4;;;-1:-1:-1;1434:289:4;;-1:-1:-1;;1434:289:4:i;1729:178::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1729:178:4;-1:-1:-1;;;;;1729:178:4;;:::i;1983:240:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1983:240:6;-1:-1:-1;;;;;1983:240:6;;:::i;437:18:4:-;;;;;;;;;;;;;;;-1:-1:-1;;437:18:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1689:145:6:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:6;;;:6;;:22;1262:67;;;;;-1:-1:-1;;;1262:67:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:6;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:6::1;::::0;;1689:145::o;1066:77::-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:6;;1066:77::o;1159:102:4:-;1204:22;1244:10;1237:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1237:17:4;;;-1:-1:-1;1237:17:4;;;;;;;;;;;;;;;;;;;1159:102;:::o;461:22::-;;;-1:-1:-1;;;;;461:22:4;;:::o;963:96::-;1005:22;1045:7;1038:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1038:14:4;;;;;;;;;-1:-1:-1;1038:14:4;;;;;;;;;;;;;;;;;963:96;:::o;1434:289::-;1280:12:6;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:6;;;:6;;:22;1262:67;;;;;-1:-1:-1;;;1262:67:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1542:27:4::1;1590:5;1597;1604:6;1612:7;:5;:7::i;:::-;1621;::::0;1572:57:::1;::::0;-1:-1:-1;;;;;1621:7:4;;::::1;::::0;1572:57:::1;::::0;::::1;:::i;:::-;::::0;;;;;;-1:-1:-1;;;;;1572:57:4;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;1572:57:4;;;;;;;;;;;;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;;;-1:-1:-1;8:100:::1;33:3;30:1;27:10;8:100;;;90:11:::0;;::::1;84:18:::0;71:11;;::::1;64:39:::0;52:2:::1;45:10;8:100;;;12:14;1572:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;1572:57:4;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;23:1:-1::1;8:100;33:3;30:1;27:10;8:100;;;90:11:::0;;::::1;84:18:::0;71:11;;::::1;64:39:::0;52:2:::1;45:10;8:100;;;12:14;1572:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;1639:7:4::1;27:10:-1::0;;39:1:::1;23:18:::0;::::1;45:23:::0;;-1:-1;1639:27:4;;;;::::1;::::0;;-1:-1:-1;;;;;;1639:27:4::1;-1:-1:-1::0;;;;;1639:27:4;;::::1;::::0;;::::1;::::0;;;1676:7:::1;::::0;:40:::1;::::0;;-1:-1:-1;;;1676:40:4;;::::1;::::0;::::1;::::0;;;;;1639:27;;-1:-1:-1;1676:7:4;;::::1;::::0;-1:-1:-1;;1676:40:4;;;;;-1:-1:-1;;1676:40:4;;;;;;-1:-1:-1;1676:7:4;:40;::::1;;5:2:-1::0;::::1;;;30:1;27::::0;20:12:::1;5:2;1676:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;1676:40:4;;;;1339:1:6;1434:289:4::0;;;:::o;1729:178::-;-1:-1:-1;;;;;1804:38:4;;1818:10;1804:38;1796:68;;;;;-1:-1:-1;;;1796:68:4;;;;;;;;;;;;-1:-1:-1;;;1796:68:4;;;;;;;;;;;;;;;1874:10;27::-1;;39:1;23:18;;45:23;;-1:-1;1874:26:4;;;;;;;;-1:-1:-1;;;;;;1874:26:4;-1:-1:-1;;;;;1874:26:4;;;;;;;;;;1729:178::o;1983:240:6:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:6;;;:6;;:22;1262:67;;;;;-1:-1:-1;;;1262:67:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:6;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:6;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:6::1;-1:-1:-1::0;;;;;2199:17:6;;;::::1;::::0;;;::::1;::::0;;1983:240::o;590:104:5:-;677:10;590:104;:::o;360:1549:4:-;;;;;;;;:::o",
  "source": "pragma solidity >= 0.4.0 < 0.7.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"./Factory.sol\";\nimport \"./MusicContract.sol\";\n\n/**\n * @title UserContract\n * @author Samarth Bhadane\n * @notice UserContract contains user data, his name, songs added by user and songs which the user bought.\n */\ncontract UserContract is Ownable{\n    \n    using SafeMath for uint;\n    \n    string public name;\n    Factory public factory;\n    MusicContract[] myMusic;\n    MusicContract[] ownedMusic;\n    \n    /**\n     * @notice constructor for UserContract.\n     * @param _name of user.\n     * @param _owner address of owner of Contract.\n     */\n    constructor(string memory _name, address _owner) public{\n        \n        factory = Factory(msg.sender);\n        name = _name;\n        transferOwnership(_owner);\n    }\n    \n    /**\n     * @notice The following function is used to get music added by user.\n     */\n    function getMyMusic() public view returns(MusicContract[] memory){\n        return myMusic;\n    }\n    \n    /**\n     * @notice The following function is used to get music owned by user.\n     */\n    function getOwnedMusic() public view returns(MusicContract[] memory){\n        return ownedMusic;\n    }\n    \n    /**\n     * @notice The following function is used by owner to add music i.e deploy new music contract.\n     * @dev only Owner must call this function.\n     */\n    function addMusic(string memory _hash, string memory _name, uint _price) public onlyOwner{\n        \n        MusicContract musicContract = new MusicContract(_hash, _name, _price, owner(), factory);\n        myMusic.push(musicContract);\n        factory.addMusicToLibrary(musicContract);\n    }\n\n    function updateOwnedMusic(MusicContract _contract) public{\n        require(MusicContract(msg.sender) == _contract, \"Invalid Operatior\");\n        ownedMusic.push(_contract);\n    }\n}",
  "sourcePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/UserContract.sol",
  "ast": {
    "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/UserContract.sol",
    "exportedSymbols": {
      "UserContract": [
        561
      ]
    },
    "id": 562,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 442,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 443,
        "nodeType": "ImportDirective",
        "scope": 562,
        "sourceUnit": 688,
        "src": "35:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 444,
        "nodeType": "ImportDirective",
        "scope": 562,
        "sourceUnit": 875,
        "src": "88:51:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol",
        "file": "./Factory.sol",
        "id": 445,
        "nodeType": "ImportDirective",
        "scope": 562,
        "sourceUnit": 151,
        "src": "140:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/MusicContract.sol",
        "file": "./MusicContract.sol",
        "id": 446,
        "nodeType": "ImportDirective",
        "scope": 562,
        "sourceUnit": 422,
        "src": "164:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 447,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 687,
              "src": "385:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$687",
                "typeString": "contract Ownable"
              }
            },
            "id": 448,
            "nodeType": "InheritanceSpecifier",
            "src": "385:7:4"
          }
        ],
        "contractDependencies": [
          421,
          584,
          687
        ],
        "contractKind": "contract",
        "documentation": "@title UserContract\n@author Samarth Bhadane\n@notice UserContract contains user data, his name, songs added by user and songs which the user bought.",
        "fullyImplemented": true,
        "id": 561,
        "linearizedBaseContracts": [
          561,
          687,
          584
        ],
        "name": "UserContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 451,
            "libraryName": {
              "contractScope": null,
              "id": 449,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 874,
              "src": "409:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$874",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "403:24:4",
            "typeName": {
              "id": 450,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "422:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 453,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 561,
            "src": "437:18:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 452,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "437:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c45a0155",
            "id": 455,
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 561,
            "src": "461:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Factory_$150",
              "typeString": "contract Factory"
            },
            "typeName": {
              "contractScope": null,
              "id": 454,
              "name": "Factory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 150,
              "src": "461:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Factory_$150",
                "typeString": "contract Factory"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 458,
            "name": "myMusic",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 561,
            "src": "489:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
              "typeString": "contract MusicContract[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 456,
                "name": "MusicContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 421,
                "src": "489:13:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MusicContract_$421",
                  "typeString": "contract MusicContract"
                }
              },
              "id": 457,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "489:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage_ptr",
                "typeString": "contract MusicContract[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 461,
            "name": "ownedMusic",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 561,
            "src": "518:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
              "typeString": "contract MusicContract[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 459,
                "name": "MusicContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 421,
                "src": "518:13:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MusicContract_$421",
                  "typeString": "contract MusicContract"
                }
              },
              "id": 460,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "518:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage_ptr",
                "typeString": "contract MusicContract[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "751:112:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 468,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "770:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Factory_$150",
                        "typeString": "contract Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 470,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 889,
                            "src": "788:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "788:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 469,
                        "name": "Factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "780:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Factory_$150_$",
                          "typeString": "type(contract Factory)"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "780:19:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Factory_$150",
                        "typeString": "contract Factory"
                      }
                    },
                    "src": "770:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Factory_$150",
                      "typeString": "contract Factory"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "770:29:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 475,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "809:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 476,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "816:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "809:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 478,
                  "nodeType": "ExpressionStatement",
                  "src": "809:12:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "849:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 479,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "831:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "831:25:4"
                }
              ]
            },
            "documentation": "@notice constructor for UserContract.\n@param _name of user.\n@param _owner address of owner of Contract.",
            "id": 484,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 484,
                  "src": "708:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 465,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 484,
                  "src": "729:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "707:37:4"
            },
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "751:0:4"
            },
            "scope": 561,
            "src": "696:167:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "1028:31:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 490,
                    "name": "myMusic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 458,
                    "src": "1045:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
                      "typeString": "contract MusicContract[] storage ref"
                    }
                  },
                  "functionReturnParameters": 489,
                  "id": 491,
                  "nodeType": "Return",
                  "src": "1038:14:4"
                }
              ]
            },
            "documentation": "@notice The following function is used to get music added by user.",
            "functionSelector": "c6ab1131",
            "id": 493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyMusic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "982:2:4"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 493,
                  "src": "1005:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_memory_ptr",
                    "typeString": "contract MusicContract[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 486,
                      "name": "MusicContract",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 421,
                      "src": "1005:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MusicContract_$421",
                        "typeString": "contract MusicContract"
                      }
                    },
                    "id": 487,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1005:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage_ptr",
                      "typeString": "contract MusicContract[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1004:24:4"
            },
            "scope": 561,
            "src": "963:96:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "1227:34:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 499,
                    "name": "ownedMusic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 461,
                    "src": "1244:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
                      "typeString": "contract MusicContract[] storage ref"
                    }
                  },
                  "functionReturnParameters": 498,
                  "id": 500,
                  "nodeType": "Return",
                  "src": "1237:17:4"
                }
              ]
            },
            "documentation": "@notice The following function is used to get music owned by user.",
            "functionSelector": "a3dc8ccf",
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnedMusic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:2:4"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 502,
                  "src": "1204:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_memory_ptr",
                    "typeString": "contract MusicContract[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 495,
                      "name": "MusicContract",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 421,
                      "src": "1204:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MusicContract_$421",
                        "typeString": "contract MusicContract"
                      }
                    },
                    "id": 496,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1204:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage_ptr",
                      "typeString": "contract MusicContract[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:24:4"
            },
            "scope": 561,
            "src": "1159:102:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 537,
              "nodeType": "Block",
              "src": "1523:200:4",
              "statements": [
                {
                  "assignments": [
                    514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 514,
                      "name": "musicContract",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 537,
                      "src": "1542:27:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MusicContract_$421",
                        "typeString": "contract MusicContract"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 513,
                        "name": "MusicContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 421,
                        "src": "1542:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 524,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 517,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "1590:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 518,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "1597:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 519,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "1604:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 520,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 626,
                          "src": "1612:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1612:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 522,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "1621:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Factory_$150",
                          "typeString": "contract Factory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Factory_$150",
                          "typeString": "contract Factory"
                        }
                      ],
                      "id": 516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1572:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_contract$_Factory_$150_$returns$_t_contract$_MusicContract_$421_$",
                        "typeString": "function (string memory,string memory,uint256,address,contract Factory) returns (contract MusicContract)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 515,
                        "name": "MusicContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 421,
                        "src": "1576:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1572:57:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MusicContract_$421",
                      "typeString": "contract MusicContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1542:87:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "musicContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "1652:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 525,
                        "name": "myMusic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "1639:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
                          "typeString": "contract MusicContract[] storage ref"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1639:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_MusicContract_$421_$returns$__$",
                        "typeString": "function (contract MusicContract)"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1639:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "1639:27:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 534,
                        "name": "musicContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "1702:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 531,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "1676:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Factory_$150",
                          "typeString": "contract Factory"
                        }
                      },
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addMusicToLibrary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 140,
                      "src": "1676:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_MusicContract_$421_$returns$__$",
                        "typeString": "function (contract MusicContract) external"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:40:4"
                }
              ]
            },
            "documentation": "@notice The following function is used by owner to add music i.e deploy new music contract.\n@dev only Owner must call this function.",
            "functionSelector": "cf95aed6",
            "id": 538,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 511,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 510,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 638,
                  "src": "1514:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1514:9:4"
              }
            ],
            "name": "addMusic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 538,
                  "src": "1452:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 538,
                  "src": "1473:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 538,
                  "src": "1494:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1451:55:4"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1523:0:4"
            },
            "scope": 561,
            "src": "1434:289:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "1786:121:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 545,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 889,
                                "src": "1818:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1818:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 544,
                            "name": "MusicContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "1804:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MusicContract_$421_$",
                              "typeString": "type(contract MusicContract)"
                            }
                          },
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1804:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MusicContract_$421",
                            "typeString": "contract MusicContract"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 548,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "1833:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MusicContract_$421",
                            "typeString": "contract MusicContract"
                          }
                        },
                        "src": "1804:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964204f7065726174696f72",
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1844:19:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1812a7c63ad2baad4b9c9a7e19a0e0900048c38c3edba60ba479c4f0a1cc6a66",
                          "typeString": "literal_string \"Invalid Operatior\""
                        },
                        "value": "Invalid Operatior"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1812a7c63ad2baad4b9c9a7e19a0e0900048c38c3edba60ba479c4f0a1cc6a66",
                          "typeString": "literal_string \"Invalid Operatior\""
                        }
                      ],
                      "id": 543,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "1796:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1796:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "1796:68:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 556,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 540,
                        "src": "1890:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 553,
                        "name": "ownedMusic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "1874:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
                          "typeString": "contract MusicContract[] storage ref"
                        }
                      },
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1874:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_MusicContract_$421_$returns$__$",
                        "typeString": "function (contract MusicContract)"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:26:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e25b8b5e",
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOwnedMusic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 560,
                  "src": "1755:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MusicContract_$421",
                    "typeString": "contract MusicContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 539,
                    "name": "MusicContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 421,
                    "src": "1755:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MusicContract_$421",
                      "typeString": "contract MusicContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1754:25:4"
            },
            "returnParameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:0:4"
            },
            "scope": 561,
            "src": "1729:178:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 562,
        "src": "360:1549:4"
      }
    ],
    "src": "0:1909:4"
  },
  "legacyAST": {
    "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/UserContract.sol",
    "exportedSymbols": {
      "UserContract": [
        561
      ]
    },
    "id": 562,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 442,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 443,
        "nodeType": "ImportDirective",
        "scope": 562,
        "sourceUnit": 688,
        "src": "35:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 444,
        "nodeType": "ImportDirective",
        "scope": 562,
        "sourceUnit": 875,
        "src": "88:51:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/Factory.sol",
        "file": "./Factory.sol",
        "id": 445,
        "nodeType": "ImportDirective",
        "scope": 562,
        "sourceUnit": 151,
        "src": "140:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/samarth/Blockchain/Dapps/music-stream/contracts/MusicContract.sol",
        "file": "./MusicContract.sol",
        "id": 446,
        "nodeType": "ImportDirective",
        "scope": 562,
        "sourceUnit": 422,
        "src": "164:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 447,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 687,
              "src": "385:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$687",
                "typeString": "contract Ownable"
              }
            },
            "id": 448,
            "nodeType": "InheritanceSpecifier",
            "src": "385:7:4"
          }
        ],
        "contractDependencies": [
          421,
          584,
          687
        ],
        "contractKind": "contract",
        "documentation": "@title UserContract\n@author Samarth Bhadane\n@notice UserContract contains user data, his name, songs added by user and songs which the user bought.",
        "fullyImplemented": true,
        "id": 561,
        "linearizedBaseContracts": [
          561,
          687,
          584
        ],
        "name": "UserContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 451,
            "libraryName": {
              "contractScope": null,
              "id": 449,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 874,
              "src": "409:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$874",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "403:24:4",
            "typeName": {
              "id": 450,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "422:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 453,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 561,
            "src": "437:18:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 452,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "437:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c45a0155",
            "id": 455,
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 561,
            "src": "461:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Factory_$150",
              "typeString": "contract Factory"
            },
            "typeName": {
              "contractScope": null,
              "id": 454,
              "name": "Factory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 150,
              "src": "461:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Factory_$150",
                "typeString": "contract Factory"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 458,
            "name": "myMusic",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 561,
            "src": "489:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
              "typeString": "contract MusicContract[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 456,
                "name": "MusicContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 421,
                "src": "489:13:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MusicContract_$421",
                  "typeString": "contract MusicContract"
                }
              },
              "id": 457,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "489:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage_ptr",
                "typeString": "contract MusicContract[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 461,
            "name": "ownedMusic",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 561,
            "src": "518:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
              "typeString": "contract MusicContract[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 459,
                "name": "MusicContract",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 421,
                "src": "518:13:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MusicContract_$421",
                  "typeString": "contract MusicContract"
                }
              },
              "id": 460,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "518:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage_ptr",
                "typeString": "contract MusicContract[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "751:112:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 468,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "770:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Factory_$150",
                        "typeString": "contract Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 470,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 889,
                            "src": "788:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "788:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 469,
                        "name": "Factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "780:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Factory_$150_$",
                          "typeString": "type(contract Factory)"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "780:19:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Factory_$150",
                        "typeString": "contract Factory"
                      }
                    },
                    "src": "770:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Factory_$150",
                      "typeString": "contract Factory"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "770:29:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 475,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "809:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 476,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "816:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "809:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 478,
                  "nodeType": "ExpressionStatement",
                  "src": "809:12:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "849:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 479,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "831:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "831:25:4"
                }
              ]
            },
            "documentation": "@notice constructor for UserContract.\n@param _name of user.\n@param _owner address of owner of Contract.",
            "id": 484,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 484,
                  "src": "708:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 465,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 484,
                  "src": "729:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "707:37:4"
            },
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "751:0:4"
            },
            "scope": 561,
            "src": "696:167:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "1028:31:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 490,
                    "name": "myMusic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 458,
                    "src": "1045:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
                      "typeString": "contract MusicContract[] storage ref"
                    }
                  },
                  "functionReturnParameters": 489,
                  "id": 491,
                  "nodeType": "Return",
                  "src": "1038:14:4"
                }
              ]
            },
            "documentation": "@notice The following function is used to get music added by user.",
            "functionSelector": "c6ab1131",
            "id": 493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyMusic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "982:2:4"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 493,
                  "src": "1005:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_memory_ptr",
                    "typeString": "contract MusicContract[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 486,
                      "name": "MusicContract",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 421,
                      "src": "1005:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MusicContract_$421",
                        "typeString": "contract MusicContract"
                      }
                    },
                    "id": 487,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1005:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage_ptr",
                      "typeString": "contract MusicContract[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1004:24:4"
            },
            "scope": 561,
            "src": "963:96:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "1227:34:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 499,
                    "name": "ownedMusic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 461,
                    "src": "1244:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
                      "typeString": "contract MusicContract[] storage ref"
                    }
                  },
                  "functionReturnParameters": 498,
                  "id": 500,
                  "nodeType": "Return",
                  "src": "1237:17:4"
                }
              ]
            },
            "documentation": "@notice The following function is used to get music owned by user.",
            "functionSelector": "a3dc8ccf",
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnedMusic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:2:4"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 502,
                  "src": "1204:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_memory_ptr",
                    "typeString": "contract MusicContract[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 495,
                      "name": "MusicContract",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 421,
                      "src": "1204:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MusicContract_$421",
                        "typeString": "contract MusicContract"
                      }
                    },
                    "id": 496,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1204:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage_ptr",
                      "typeString": "contract MusicContract[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:24:4"
            },
            "scope": 561,
            "src": "1159:102:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 537,
              "nodeType": "Block",
              "src": "1523:200:4",
              "statements": [
                {
                  "assignments": [
                    514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 514,
                      "name": "musicContract",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 537,
                      "src": "1542:27:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MusicContract_$421",
                        "typeString": "contract MusicContract"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 513,
                        "name": "MusicContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 421,
                        "src": "1542:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 524,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 517,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "1590:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 518,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "1597:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 519,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "1604:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 520,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 626,
                          "src": "1612:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1612:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 522,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "1621:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Factory_$150",
                          "typeString": "contract Factory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Factory_$150",
                          "typeString": "contract Factory"
                        }
                      ],
                      "id": 516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1572:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_contract$_Factory_$150_$returns$_t_contract$_MusicContract_$421_$",
                        "typeString": "function (string memory,string memory,uint256,address,contract Factory) returns (contract MusicContract)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 515,
                        "name": "MusicContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 421,
                        "src": "1576:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1572:57:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MusicContract_$421",
                      "typeString": "contract MusicContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1542:87:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "musicContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "1652:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 525,
                        "name": "myMusic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "1639:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
                          "typeString": "contract MusicContract[] storage ref"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1639:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_MusicContract_$421_$returns$__$",
                        "typeString": "function (contract MusicContract)"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1639:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "1639:27:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 534,
                        "name": "musicContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "1702:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 531,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "1676:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Factory_$150",
                          "typeString": "contract Factory"
                        }
                      },
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addMusicToLibrary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 140,
                      "src": "1676:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_MusicContract_$421_$returns$__$",
                        "typeString": "function (contract MusicContract) external"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:40:4"
                }
              ]
            },
            "documentation": "@notice The following function is used by owner to add music i.e deploy new music contract.\n@dev only Owner must call this function.",
            "functionSelector": "cf95aed6",
            "id": 538,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 511,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 510,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 638,
                  "src": "1514:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1514:9:4"
              }
            ],
            "name": "addMusic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 538,
                  "src": "1452:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 538,
                  "src": "1473:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 538,
                  "src": "1494:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1451:55:4"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1523:0:4"
            },
            "scope": 561,
            "src": "1434:289:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "1786:121:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 545,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 889,
                                "src": "1818:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1818:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 544,
                            "name": "MusicContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "1804:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MusicContract_$421_$",
                              "typeString": "type(contract MusicContract)"
                            }
                          },
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1804:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MusicContract_$421",
                            "typeString": "contract MusicContract"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 548,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "1833:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MusicContract_$421",
                            "typeString": "contract MusicContract"
                          }
                        },
                        "src": "1804:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964204f7065726174696f72",
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1844:19:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1812a7c63ad2baad4b9c9a7e19a0e0900048c38c3edba60ba479c4f0a1cc6a66",
                          "typeString": "literal_string \"Invalid Operatior\""
                        },
                        "value": "Invalid Operatior"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1812a7c63ad2baad4b9c9a7e19a0e0900048c38c3edba60ba479c4f0a1cc6a66",
                          "typeString": "literal_string \"Invalid Operatior\""
                        }
                      ],
                      "id": 543,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        892,
                        893
                      ],
                      "referencedDeclaration": 893,
                      "src": "1796:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1796:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "1796:68:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 556,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 540,
                        "src": "1890:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MusicContract_$421",
                          "typeString": "contract MusicContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 553,
                        "name": "ownedMusic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "1874:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_MusicContract_$421_$dyn_storage",
                          "typeString": "contract MusicContract[] storage ref"
                        }
                      },
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1874:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_MusicContract_$421_$returns$__$",
                        "typeString": "function (contract MusicContract)"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:26:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e25b8b5e",
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOwnedMusic",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 560,
                  "src": "1755:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MusicContract_$421",
                    "typeString": "contract MusicContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 539,
                    "name": "MusicContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 421,
                    "src": "1755:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MusicContract_$421",
                      "typeString": "contract MusicContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1754:25:4"
            },
            "returnParameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:0:4"
            },
            "scope": 561,
            "src": "1729:178:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 562,
        "src": "360:1549:4"
      }
    ],
    "src": "0:1909:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-12-01T11:27:15.740Z",
  "devdoc": {
    "author": "Samarth Bhadane",
    "methods": {
      "addMusic(string,string,uint256)": {
        "details": "only Owner must call this function."
      },
      "constructor": {
        "params": {
          "_name": "of user.",
          "_owner": "address of owner of Contract."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "UserContract"
  },
  "userdoc": {
    "methods": {
      "addMusic(string,string,uint256)": {
        "notice": "The following function is used by owner to add music i.e deploy new music contract."
      },
      "constructor": "constructor for UserContract.",
      "getMyMusic()": {
        "notice": "The following function is used to get music added by user."
      },
      "getOwnedMusic()": {
        "notice": "The following function is used to get music owned by user."
      }
    },
    "notice": "UserContract contains user data, his name, songs added by user and songs which the user bought."
  }
}